/* tslint:disable */
/* eslint-disable */
/**
 * BearPlatform Api 后端接口文档 移动端/微信小程序/钉钉/H5 - version 2.0
 *
 *
 *
 * OpenAPI version: 3.0.1
 *
 *
 * NOTE: This file is auto generated by the alova's vscode plugin.
 *
 * https://alova.js.org/devtools/vscode
 *
 * **Do not edit the file manually.**
 */
import type { Alova, AlovaMethodCreateConfig, AlovaGenerics, Method } from 'alova';
import type { $$userConfigMap, alovaInstance } from '.';
import type apiDefinitions from './apiDefinitions';

type CollapsedAlova = typeof alovaInstance;
type UserMethodConfigMap = typeof $$userConfigMap;

type Alova2MethodConfig<Responded> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Omit<
        AlovaMethodCreateConfig<
          AlovaGenerics<Responded, any, RequestConfig, Response, ResponseHeader, L1Cache, L2Cache, SE>,
          any,
          Responded
        >,
        'params'
      >
    : never;

// Extract the return type of transform function that define in $$userConfigMap, if it not exists, use the default type.
type ExtractUserDefinedTransformed<
  DefinitionKey extends keyof typeof apiDefinitions,
  Default
> = DefinitionKey extends keyof UserMethodConfigMap
  ? UserMethodConfigMap[DefinitionKey]['transform'] extends (...args: any[]) => any
    ? Awaited<ReturnType<UserMethodConfigMap[DefinitionKey]['transform']>>
    : Default
  : Default;
type Alova2Method<
  Responded,
  DefinitionKey extends keyof typeof apiDefinitions,
  CurrentConfig extends Alova2MethodConfig<any>
> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Method<
        AlovaGenerics<
          CurrentConfig extends undefined
            ? ExtractUserDefinedTransformed<DefinitionKey, Responded>
            : CurrentConfig['transform'] extends (...args: any[]) => any
              ? Awaited<ReturnType<CurrentConfig['transform']>>
              : ExtractUserDefinedTransformed<DefinitionKey, Responded>,
          any,
          RequestConfig,
          Response,
          ResponseHeader,
          L1Cache,
          L2Cache,
          SE
        >
      >
    : never;

export type CaptchaVo = {
  /**
   * 图片base64
   */
  img: string | null;
  /**
   * 验证码ID
   */
  captchaId: string | null;
  /**
   * 是否显示验证码
   */
  showCaptcha: boolean;
};
export type DataScopeType = 0 | 1 | 2 | 3 | 4 | 5;
export type LayoutTypeEnum = 1 | 2;
export type MenuType = 1 | 2 | 3 | 4;
export type IconTypeEnum = 1 | 2;
export type TenantType = 1 | 2;
export type DbType =
  | 0
  | 1
  | 2
  | 3
  | 4
  | 5
  | 6
  | 7
  | 8
  | 9
  | 10
  | 11
  | 12
  | 13
  | 14
  | 15
  | 16
  | 17
  | 18
  | 19
  | 20
  | 21
  | 22
  | 23
  | 24
  | 25
  | 26
  | 27
  | 28
  | 29
  | 30
  | 31
  | 900;
export type Tenant = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 租户Id
   */
  tenantId: number;
  /**
   * 名称
   */
  name: string | null;
  /**
   * 描述
   */
  description: string | null;
  /**
   * 租户类型
   */
  tenantType: TenantType;
  /**
   * 库Id
   */
  configId: string | null;
  dbType: DbType;
  /**
   * 数据库连接
   */
  connectionString: string | null;
  /**
   * 用户列表
   */
  users: User[] | null;
};
export type Job = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 名称
   */
  name: string | null;
  /**
   * 编号
   */
  code: string | null;
  /**
   * 排序
   */
  sort: number;
  /**
   * 是否激活
   */
  enabled: boolean;
  /**
   * 用户列表
   */
  users: User[] | null;
};
export type User = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 用户名
   */
  userName: string | null;
  /**
   * 昵称
   */
  nickName: string | null;
  /**
   * 邮箱
   */
  email: string | null;
  /**
   * 是否内置管理员
   */
  isAdmin: boolean;
  /**
   * 是否激活
   */
  enabled: boolean;
  /**
   * 密码
   */
  password: string | null;
  /**
   * 部门
   */
  deptId: string;
  /**
   * 电话
   */
  phone: string | null;
  /**
   * 头像路径
   */
  avatarPath: string | null;
  /**
   * 最后修改密码时间
   */
  passwordReSetTime: string | null;
  /**
   * 性别
   */
  gender: string | null;
  /**
   * 租户ID
   */
  tenantId: number;
  /**
   * 部门
   */
  dept: Dept;
  /**
   * 角色集合
   */
  roles: Role[] | null;
  /**
   * 岗位集合
   */
  jobs: Job[] | null;
  /**
   * 租户
   */
  tenant: Tenant;
};
export type Dept = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 部门名称
   */
  name: string | null;
  /**
   * 父级部门ID
   */
  parentId: string;
  /**
   * 排序
   */
  sort: number;
  /**
   * 是否启用
   */
  enabled: boolean;
  /**
   * 子节点个数
   */
  subCount: number;
  /**
   * 用户列表
   */
  users: User[] | null;
  /**
   * 用户集合
   */
  roles: Role[] | null;
};
export type Apis = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 组
   */
  group: string | null;
  /**
   * 路径
   */
  url: string | null;
  /**
   * 版本
   */
  version: number;
  /**
   * 描述
   */
  description: string | null;
  /**
   * 请求方法
   */
  method: string | null;
  /**
   * 角色集合
   */
  roles: Role[] | null;
};
export type Role = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 角色名称
   */
  name: string | null;
  /**
   * 角色等级
   */
  level: number;
  /**
   * 描述
   */
  description: string | null;
  dataScopeType: DataScopeType;
  /**
   * 角色代码
   */
  permission: string | null;
  /**
   * 菜单集合
   */
  menus: Menu[] | null;
  /**
   * 部门集合
   */
  depts: Dept[] | null;
  /**
   * 用户列表
   */
  users: User[] | null;
  /**
   * 菜单集合
   */
  apis: Apis[] | null;
};
export type Menu = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 权限标识符
   */
  permission: string | null;
  /**
   * 菜单名
   */
  name: string | null;
  /**
   * 路径
   */
  pathParam: string | null;
  layout: LayoutTypeEnum;
  /**
   * 重定向
   */
  redirect: string | null;
  /**
   * 组件
   */
  component: string | null;
  /**
   * 父级
   */
  parentId: string | null;
  menuType: MenuType;
  iconType: IconTypeEnum;
  /**
   * 状态
   */
  status: boolean;
  /**
   * 路由标题(可用来作document.title或者菜单的名称)
   */
  title: string | null;
  /**
   * 缓存页面
   */
  keepAlive: boolean;
  /**
   * 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
   */
  constant: boolean;
  /**
   * 菜单和面包屑对应的图标
   */
  icon: string | null;
  /**
   * 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
   */
  localIcon: string | null;
  /**
   * 菜单和面包屑对应的图标的字体大小
   */
  iconFontSize: number;
  /**
   * 路由顺序，可用于菜单的排序
   */
  order: number;
  /**
   * 外链链接
   */
  href: string | null;
  /**
   * 是否在菜单中隐藏路线
   */
  hideInMenu: boolean;
  /**
   * 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
   */
  activeMenu: string | null;
  /**
   * 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
   */
  multiTab: boolean;
  /**
   * 如果设置，路线将固定在制表符中，值是固定制表符的顺序
   */
  fixedIndexInTab: number;
  props: boolean;
  /**
   * 子菜单集合
   */
  children: Menu[] | null;
  /**
   * 菜单集合
   */
  roles: Role[] | null;
};
export type MenuButton = {
  id: string;
  /**
   * 按钮编码
   */
  code: string | null;
  /**
   * 描述
   */
  desc: string | null;
  /**
   * 父级Id
   */
  parentId: string | null;
  /**
   * 状态
   */
  status: boolean;
};
export type MenuQuery = {
  id: string;
  /**
   * 父级Id
   */
  parentId: string | null;
  key: string | null;
  value: string | null;
  /**
   * 状态
   */
  status: boolean;
};
export type MenuInfo = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 权限标识符
   */
  permission: string | null;
  /**
   * 菜单名
   */
  name: string | null;
  /**
   * 路径
   */
  pathParam: string | null;
  layout: LayoutTypeEnum;
  /**
   * 重定向
   */
  redirect: string | null;
  /**
   * 组件
   */
  component: string | null;
  /**
   * 父级
   */
  parentId: string | null;
  menuType: MenuType;
  iconType: IconTypeEnum;
  /**
   * 状态
   */
  status: boolean;
  /**
   * 路由标题(可用来作document.title或者菜单的名称)
   */
  title: string | null;
  /**
   * 缓存页面
   */
  keepAlive: boolean;
  /**
   * 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
   */
  constant: boolean;
  /**
   * 菜单和面包屑对应的图标
   */
  icon: string | null;
  /**
   * 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
   */
  localIcon: string | null;
  /**
   * 菜单和面包屑对应的图标的字体大小
   */
  iconFontSize: number;
  /**
   * 路由顺序，可用于菜单的排序
   */
  order: number;
  /**
   * 外链链接
   */
  href: string | null;
  /**
   * 是否在菜单中隐藏路线
   */
  hideInMenu: boolean;
  /**
   * 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
   */
  activeMenu: string | null;
  /**
   * 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
   */
  multiTab: boolean;
  /**
   * 如果设置，路线将固定在制表符中，值是固定制表符的顺序
   */
  fixedIndexInTab: number;
  props: boolean;
  /**
   * 子菜单集合
   */
  children: Menu[] | null;
  /**
   * 菜单集合
   */
  roles: Role[] | null;
  buttons: MenuButton[] | null;
  querys: MenuQuery[] | null;
};
export type DeptInfo = {
  /**
   * ID
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否删除
   */
  isDeleted: boolean;
  /**
   * 名称
   */
  name: string | null;
};
export type RoleInfo = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否删除
   */
  isDeleted: boolean;
  /**
   * 名称
   */
  name: string | null;
  /**
   * 等级
   */
  level: number;
  /**
   * 描述
   */
  description: string | null;
  dataScopeType: DataScopeType;
  /**
   * 权限标识
   */
  permission: string | null;
  /**
   * 菜单列表
   */
  menus: MenuInfo[] | null;
  /**
   * 部门列表
   */
  depts: DeptInfo[] | null;
  /**
   * 菜单列表
   */
  apis: Apis[] | null;
};
export type UserInfo = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否删除
   */
  isDeleted: boolean;
  /**
   * 用户名
   */
  userName: string | null;
  /**
   * 昵称
   */
  nickName: string | null;
  /**
   * 邮箱
   */
  email: string | null;
  /**
   * 内置管理员
   */
  isAdmin: boolean;
  /**
   * 是否激活
   */
  enabled: boolean;
  /**
   * 密码
   */
  password: string | null;
  /**
   * 部门
   */
  deptId: string;
  /**
   * 电话
   */
  phone: string | null;
  /**
   * 头像文件路径
   */
  avatarPath: string | null;
  /**
   * 性别
   */
  gender: string | null;
  /**
   * 最后修改密码时间
   */
  passwordReSetTime: string | null;
  /**
   * 角色列表
   */
  roles: RoleInfo[] | null;
  dept: DeptInfo;
  /**
   * 租户ID
   */
  tenantId: number;
};
export type JwtUserInfo = {
  /**
   * 详情
   */
  user: UserInfo;
  /**
   * 角色权限
   */
  roles: string[] | null;
  /**
   * 数据权限
   */
  dataScopes: string[] | null;
};
export type LoginToken = {
  /**
   * 授权token
   */
  accessToken: string | null;
  /**
   * 过期时间
   */
  expires: number;
  /**
   * 类型
   */
  tokenType: string | null;
  /**
   * 刷新token
   */
  refreshToken: string | null;
  /**
   * 允许token时间内
   */
  refreshTokenExpires: number;
};
export type LoginParam = {
  /**
   * 用户名
   * [required]
   */
  userName: string;
  /**
   * 密码
   * [required]
   */
  password: string;
  /**
   * 验证码
   */
  captcha: string | null;
  /**
   * 验证码ID
   */
  captchaId: string | null;
};
declare global {
  interface Apis {
    Login: {
      /**
       * ---
       *
       * [GET] 获取验证码
       *
       * **path:** /api/Login/Captcha
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 验证码
       *   // [required]
       *   data: {
       *     // 图片base64
       *     img: string | null
       *     // 验证码ID
       *     captchaId: string | null
       *     // 是否显示验证码
       *     showCaptcha: boolean
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_captcha<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 验证码
           * [required]
           */
          data: CaptchaVo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 验证码
           * [required]
           */
          data: CaptchaVo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Login.get_captcha',
        Config
      >;
      /**
       * ---
       *
       * [GET]  (Auth policies: Permission)
       *
       * **path:** /api/Login/GetInfo
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // JWT令牌用户
       *   // [required]
       *   data: {
       *     // 详情
       *     user: {
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否删除
       *       isDeleted: boolean
       *       // 用户名
       *       userName: string | null
       *       // 昵称
       *       nickName: string | null
       *       // 邮箱
       *       email: string | null
       *       // 内置管理员
       *       isAdmin: boolean
       *       // 是否激活
       *       enabled: boolean
       *       // 密码
       *       password: string | null
       *       // 部门
       *       deptId: string
       *       // 电话
       *       phone: string | null
       *       // 头像文件路径
       *       avatarPath: string | null
       *       // 性别
       *       gender: string | null
       *       // 最后修改密码时间
       *       passwordReSetTime: string | null
       *       // 角色列表
       *       roles: Array<{
       *         // 主键
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否删除
       *         isDeleted: boolean
       *         // 名称
       *         name: string | null
       *         // 等级
       *         level: number
       *         // 描述
       *         description: string | null
       *         dataScopeType: 0 | 1 | 2 | 3 | 4 | 5
       *         // 权限标识
       *         permission: string | null
       *         // 菜单列表
       *         menus: Array<{
       *           // 主键
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否已删除
       *           isDeleted: boolean
       *           // 权限标识符
       *           permission: string | null
       *           // 菜单名
       *           name: string | null
       *           // 路径
       *           pathParam: string | null
       *           layout: 1 | 2
       *           // 重定向
       *           redirect: string | null
       *           // 组件
       *           component: string | null
       *           // 父级
       *           parentId: string | null
       *           menuType: 1 | 2 | 3 | 4
       *           iconType: 1 | 2
       *           // 状态
       *           status: boolean
       *           // 路由标题(可用来作document.title或者菜单的名称)
       *           title: string | null
       *           // 缓存页面
       *           keepAlive: boolean
       *           // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *           constant: boolean
       *           // 菜单和面包屑对应的图标
       *           icon: string | null
       *           // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *           localIcon: string | null
       *           // 菜单和面包屑对应的图标的字体大小
       *           iconFontSize: number
       *           // 路由顺序，可用于菜单的排序
       *           order: number
       *           // 外链链接
       *           href: string | null
       *           // 是否在菜单中隐藏路线
       *           hideInMenu: boolean
       *           // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *           activeMenu: string | null
       *           // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *           multiTab: boolean
       *           // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *           fixedIndexInTab: number
       *           props: boolean
       *           // 子菜单集合
       *           children: Array<{
       *             // 主键
       *             id: string
       *             // 创建者名称
       *             createBy: string | null
       *             // 创建时间
       *             createTime: string
       *             // 更新者名称
       *             updateBy: string | null
       *             // 最后更新时间
       *             updateTime: string | null
       *             // 是否已删除
       *             isDeleted: boolean
       *             // 权限标识符
       *             permission: string | null
       *             // 菜单名
       *             name: string | null
       *             // 路径
       *             pathParam: string | null
       *             layout: LayoutTypeEnum
       *             // 重定向
       *             redirect: string | null
       *             // 组件
       *             component: string | null
       *             // 父级
       *             parentId: string | null
       *             menuType: MenuType
       *             iconType: IconTypeEnum
       *             // 状态
       *             status: boolean
       *             // 路由标题(可用来作document.title或者菜单的名称)
       *             title: string | null
       *             // 缓存页面
       *             keepAlive: boolean
       *             // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *             constant: boolean
       *             // 菜单和面包屑对应的图标
       *             icon: string | null
       *             // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *             localIcon: string | null
       *             // 菜单和面包屑对应的图标的字体大小
       *             iconFontSize: number
       *             // 路由顺序，可用于菜单的排序
       *             order: number
       *             // 外链链接
       *             href: string | null
       *             // 是否在菜单中隐藏路线
       *             hideInMenu: boolean
       *             // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *             activeMenu: string | null
       *             // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *             multiTab: boolean
       *             // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *             fixedIndexInTab: number
       *             props: boolean
       *             // 子菜单集合
       *             children: Array<Menu> | null
       *             // 菜单集合
       *             roles: Array<{
       *               // 主键
       *               id: string
       *               // 创建者名称
       *               createBy: string | null
       *               // 创建时间
       *               createTime: string
       *               // 更新者名称
       *               updateBy: string | null
       *               // 最后更新时间
       *               updateTime: string | null
       *               // 是否已删除
       *               isDeleted: boolean
       *               // 角色名称
       *               name: string | null
       *               // 角色等级
       *               level: number
       *               // 描述
       *               description: string | null
       *               dataScopeType: DataScopeType
       *               // 角色代码
       *               permission: string | null
       *               // 菜单集合
       *               menus: Array<Menu> | null
       *               // 部门集合
       *               depts: Array<{
       *                 // 主键
       *                 id: string
       *                 // 创建者名称
       *                 createBy: string | null
       *                 // 创建时间
       *                 createTime: string
       *                 // 更新者名称
       *                 updateBy: string | null
       *                 // 最后更新时间
       *                 updateTime: string | null
       *                 // 是否已删除
       *                 isDeleted: boolean
       *                 // 部门名称
       *                 name: string | null
       *                 // 父级部门ID
       *                 parentId: string
       *                 // 排序
       *                 sort: number
       *                 // 是否启用
       *                 enabled: boolean
       *                 // 子节点个数
       *                 subCount: number
       *                 // 用户列表
       *                 users: Array<{
       *                   // 主键
       *                   id: string
       *                   // 创建者名称
       *                   createBy: string | null
       *                   // 创建时间
       *                   createTime: string
       *                   // 更新者名称
       *                   updateBy: string | null
       *                   // 最后更新时间
       *                   updateTime: string | null
       *                   // 是否已删除
       *                   isDeleted: boolean
       *                   // 用户名
       *                   userName: string | null
       *                   // 昵称
       *                   nickName: string | null
       *                   // 邮箱
       *                   email: string | null
       *                   // 是否内置管理员
       *                   isAdmin: boolean
       *                   // 是否激活
       *                   enabled: boolean
       *                   // 密码
       *                   password: string | null
       *                   // 部门
       *                   deptId: string
       *                   // 电话
       *                   phone: string | null
       *                   // 头像路径
       *                   avatarPath: string | null
       *                   // 最后修改密码时间
       *                   passwordReSetTime: string | null
       *                   // 性别
       *                   gender: string | null
       *                   // 租户ID
       *                   tenantId: number
       *                   // 部门
       *                   dept: Dept
       *                   // 角色集合
       *                   roles: Array<Role> | null
       *                   // 岗位集合
       *                   jobs: Array<{
       *                     // 主键
       *                     id: string
       *                     // 创建者名称
       *                     createBy: string | null
       *                     // 创建时间
       *                     createTime: string
       *                     // 更新者名称
       *                     updateBy: string | null
       *                     // 最后更新时间
       *                     updateTime: string | null
       *                     // 是否已删除
       *                     isDeleted: boolean
       *                     // 名称
       *                     name: string | null
       *                     // 编号
       *                     code: string | null
       *                     // 排序
       *                     sort: number
       *                     // 是否激活
       *                     enabled: boolean
       *                     // 用户列表
       *                     users: Array<User> | null
       *                   }> | null
       *                   // 租户
       *                   tenant: {
       *                     // 主键
       *                     id: string
       *                     // 创建者名称
       *                     createBy: string | null
       *                     // 创建时间
       *                     createTime: string
       *                     // 更新者名称
       *                     updateBy: string | null
       *                     // 最后更新时间
       *                     updateTime: string | null
       *                     // 是否已删除
       *                     isDeleted: boolean
       *                     // 租户Id
       *                     tenantId: number
       *                     // 名称
       *                     name: string | null
       *                     // 描述
       *                     description: string | null
       *                     // 租户类型
       *                     tenantType: 1 | 2
       *                     // 库Id
       *                     configId: string | null
       *                     dbType:
       *                       | 0
       *                       | 1
       *                       | 2
       *                       | 3
       *                       | 4
       *                       | 5
       *                       | 6
       *                       | 7
       *                       | 8
       *                       | 9
       *                       | 10
       *                       | 11
       *                       | 12
       *                       | 13
       *                       | 14
       *                       | 15
       *                       | 16
       *                       | 17
       *                       | 18
       *                       | 19
       *                       | 20
       *                       | 21
       *                       | 22
       *                       | 23
       *                       | 24
       *                       | 25
       *                       | 26
       *                       | 27
       *                       | 28
       *                       | 29
       *                       | 30
       *                       | 31
       *                       | 900
       *                     // 数据库连接
       *                     connectionString: string | null
       *                     // 用户列表
       *                     users: Array<User> | null
       *                   }
       *                 }> | null
       *                 // 用户集合
       *                 roles: Array<Role> | null
       *               }> | null
       *               // 用户列表
       *               users: Array<User> | null
       *               // 菜单集合
       *               apis: Array<{
       *                 // 主键
       *                 id: string
       *                 // 创建者名称
       *                 createBy: string | null
       *                 // 创建时间
       *                 createTime: string
       *                 // 更新者名称
       *                 updateBy: string | null
       *                 // 最后更新时间
       *                 updateTime: string | null
       *                 // 是否已删除
       *                 isDeleted: boolean
       *                 // 组
       *                 group: string | null
       *                 // 路径
       *                 url: string | null
       *                 // 版本
       *                 version: number
       *                 // 描述
       *                 description: string | null
       *                 // 请求方法
       *                 method: string | null
       *                 // 角色集合
       *                 roles: Array<Role> | null
       *               }> | null
       *             }> | null
       *           }> | null
       *           // 菜单集合
       *           roles: Array<Role> | null
       *           buttons: Array<{
       *             id: string
       *             // 按钮编码
       *             code: string | null
       *             // 描述
       *             desc: string | null
       *             // 父级Id
       *             parentId: string | null
       *             // 状态
       *             status: boolean
       *           }> | null
       *           querys: Array<{
       *             id: string
       *             // 父级Id
       *             parentId: string | null
       *             key: string | null
       *             value: string | null
       *             // 状态
       *             status: boolean
       *           }> | null
       *         }> | null
       *         // 部门列表
       *         depts: Array<{
       *           // ID
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否删除
       *           isDeleted: boolean
       *           // 名称
       *           name: string | null
       *         }> | null
       *         // 菜单列表
       *         apis: Array<Apis> | null
       *       }> | null
       *       dept: DeptInfo
       *       // 租户ID
       *       tenantId: number
       *     }
       *     // 角色权限
       *     roles: string[] | null
       *     // 数据权限
       *     dataScopes: string[] | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_getinfo<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * JWT令牌用户
           * [required]
           */
          data: JwtUserInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * JWT令牌用户
           * [required]
           */
          data: JwtUserInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Login.get_getinfo',
        Config
      >;
      /**
       * ---
       *
       * [POST] 用户登录
       *
       * **path:** /api/Login/Login
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 用户名
       *   // [required]
       *   userName: string
       *   // 密码
       *   // [required]
       *   password: string
       *   // 验证码
       *   captcha: string | null
       *   // 验证码ID
       *   captchaId: string | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     // 授权token
       *     accessToken: string | null
       *     // 过期时间
       *     expires: number
       *     // 类型
       *     tokenType: string | null
       *     // 刷新token
       *     refreshToken: string | null
       *     // 允许token时间内
       *     refreshTokenExpires: number
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_login<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: LoginToken;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: LoginParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: LoginToken;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Login.post_login',
        Config
      >;
      /**
       * ---
       *
       * [POST] 刷新Token
       *
       * **path:** /api/Login/RefreshToken
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   token: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     // 授权token
       *     accessToken: string | null
       *     // 过期时间
       *     expires: number
       *     // 类型
       *     tokenType: string | null
       *     // 刷新token
       *     refreshToken: string | null
       *     // 允许token时间内
       *     refreshTokenExpires: number
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_refreshtoken<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: LoginToken;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            token: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: LoginToken;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Login.post_refreshtoken',
        Config
      >;
    };
  }

  var Apis: Apis;
}
