/* tslint:disable */
/* eslint-disable */
/**
 * BearPlatform Api 后端接口文档 Web端网站 - version 1.0
 *
 *
 *
 * OpenAPI version: 3.0.1
 *
 *
 * NOTE: This file is auto generated by the alova's vscode plugin.
 *
 * https://alova.js.org/devtools/vscode
 *
 * **Do not edit the file manually.**
 */
import type { Alova, AlovaMethodCreateConfig, AlovaGenerics, Method } from 'alova';
import type { $$userConfigMap, alovaInstance } from '.';
import type apiDefinitions from './apiDefinitions';

type CollapsedAlova = typeof alovaInstance;
type UserMethodConfigMap = typeof $$userConfigMap;

type Alova2MethodConfig<Responded> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Omit<
        AlovaMethodCreateConfig<
          AlovaGenerics<Responded, any, RequestConfig, Response, ResponseHeader, L1Cache, L2Cache, SE>,
          any,
          Responded
        >,
        'params'
      >
    : never;

// Extract the return type of transform function that define in $$userConfigMap, if it not exists, use the default type.
type ExtractUserDefinedTransformed<
  DefinitionKey extends keyof typeof apiDefinitions,
  Default
> = DefinitionKey extends keyof UserMethodConfigMap
  ? UserMethodConfigMap[DefinitionKey]['transform'] extends (...args: any[]) => any
    ? Awaited<ReturnType<UserMethodConfigMap[DefinitionKey]['transform']>>
    : Default
  : Default;
type Alova2Method<
  Responded,
  DefinitionKey extends keyof typeof apiDefinitions,
  CurrentConfig extends Alova2MethodConfig<any>
> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Method<
        AlovaGenerics<
          CurrentConfig extends undefined
            ? ExtractUserDefinedTransformed<DefinitionKey, Responded>
            : CurrentConfig['transform'] extends (...args: any[]) => any
              ? Awaited<ReturnType<CurrentConfig['transform']>>
              : ExtractUserDefinedTransformed<DefinitionKey, Responded>,
          any,
          RequestConfig,
          Response,
          ResponseHeader,
          L1Cache,
          L2Cache,
          SE
        >
      >
    : never;

export type DataScopeType = 0 | 1 | 2 | 3 | 4 | 5;
export type LayoutTypeEnum = 1 | 2;
export type MenuType = 1 | 2 | 3 | 4;
export type IconTypeEnum = 1 | 2;
export type Menu = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 权限标识符
   */
  permission: string | null;
  /**
   * 菜单名
   */
  name: string | null;
  /**
   * 路径
   */
  pathParam: string | null;
  layout: LayoutTypeEnum;
  /**
   * 重定向
   */
  redirect: string | null;
  /**
   * 组件
   */
  component: string | null;
  /**
   * 父级
   */
  parentId: string | null;
  menuType: MenuType;
  iconType: IconTypeEnum;
  /**
   * 状态
   */
  status: boolean;
  /**
   * 路由标题(可用来作document.title或者菜单的名称)
   */
  title: string | null;
  /**
   * 缓存页面
   */
  keepAlive: boolean;
  /**
   * 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
   */
  constant: boolean;
  /**
   * 菜单和面包屑对应的图标
   */
  icon: string | null;
  /**
   * 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
   */
  localIcon: string | null;
  /**
   * 菜单和面包屑对应的图标的字体大小
   */
  iconFontSize: number;
  /**
   * 路由顺序，可用于菜单的排序
   */
  order: number;
  /**
   * 外链链接
   */
  href: string | null;
  /**
   * 是否在菜单中隐藏路线
   */
  hideInMenu: boolean;
  /**
   * 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
   */
  activeMenu: string | null;
  /**
   * 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
   */
  multiTab: boolean;
  /**
   * 如果设置，路线将固定在制表符中，值是固定制表符的顺序
   */
  fixedIndexInTab: number;
  props: boolean;
  /**
   * 子菜单集合
   */
  children: Menu[] | null;
  /**
   * 菜单集合
   */
  roles: Role[] | null;
};
export type TenantType = 1 | 2;
export type DbType =
  | 0
  | 1
  | 2
  | 3
  | 4
  | 5
  | 6
  | 7
  | 8
  | 9
  | 10
  | 11
  | 12
  | 13
  | 14
  | 15
  | 16
  | 17
  | 18
  | 19
  | 20
  | 21
  | 22
  | 23
  | 24
  | 25
  | 26
  | 27
  | 28
  | 29
  | 30
  | 31
  | 900;
export type Tenant = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 租户Id
   */
  tenantId: number;
  /**
   * 名称
   */
  name: string | null;
  /**
   * 描述
   */
  description: string | null;
  /**
   * 租户类型
   */
  tenantType: TenantType;
  /**
   * 库Id
   */
  configId: string | null;
  dbType: DbType;
  /**
   * 数据库连接
   */
  connectionString: string | null;
  /**
   * 用户列表
   */
  users: User[] | null;
};
export type Job = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 名称
   */
  name: string | null;
  /**
   * 编号
   */
  code: string | null;
  /**
   * 排序
   */
  sort: number;
  /**
   * 是否激活
   */
  enabled: boolean;
  /**
   * 用户列表
   */
  users: User[] | null;
};
export type User = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 用户名
   */
  userName: string | null;
  /**
   * 昵称
   */
  nickName: string | null;
  /**
   * 邮箱
   */
  email: string | null;
  /**
   * 是否内置管理员
   */
  isAdmin: boolean;
  /**
   * 是否激活
   */
  enabled: boolean;
  /**
   * 密码
   */
  password: string | null;
  /**
   * 部门
   */
  deptId: string;
  /**
   * 电话
   */
  phone: string | null;
  /**
   * 头像路径
   */
  avatarPath: string | null;
  /**
   * 最后修改密码时间
   */
  passwordReSetTime: string | null;
  /**
   * 性别
   */
  gender: string | null;
  /**
   * 租户ID
   */
  tenantId: number;
  /**
   * 部门
   */
  dept: Dept;
  /**
   * 角色集合
   */
  roles: Role[] | null;
  /**
   * 岗位集合
   */
  jobs: Job[] | null;
  /**
   * 租户
   */
  tenant: Tenant;
};
export type Dept = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 部门名称
   */
  name: string | null;
  /**
   * 父级部门ID
   */
  parentId: string;
  /**
   * 排序
   */
  sort: number;
  /**
   * 是否启用
   */
  enabled: boolean;
  /**
   * 子节点个数
   */
  subCount: number;
  /**
   * 用户列表
   */
  users: User[] | null;
  /**
   * 用户集合
   */
  roles: Role[] | null;
};
export type Apis = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 组
   */
  group: string | null;
  /**
   * 路径
   */
  url: string | null;
  /**
   * 版本
   */
  version: number;
  /**
   * 描述
   */
  description: string | null;
  /**
   * 请求方法
   */
  method: string | null;
  /**
   * 角色集合
   */
  roles: Role[] | null;
};
export type Role = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 角色名称
   */
  name: string | null;
  /**
   * 角色等级
   */
  level: number;
  /**
   * 描述
   */
  description: string | null;
  dataScopeType: DataScopeType;
  /**
   * 角色代码
   */
  permission: string | null;
  /**
   * 菜单集合
   */
  menus: Menu[] | null;
  /**
   * 部门集合
   */
  depts: Dept[] | null;
  /**
   * 用户列表
   */
  users: User[] | null;
  /**
   * 菜单集合
   */
  apis: Apis[] | null;
};
export type UpdateApisParam = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 组
   */
  group: string | null;
  /**
   * 路径
   */
  url: string | null;
  /**
   * 版本
   */
  version: number;
  /**
   * 描述
   */
  description: string | null;
  /**
   * 请求方法
   */
  method: string | null;
  /**
   * 角色集合
   */
  roles: Role[] | null;
};
export type VersionEnum = 0 | 1 | 2;
export type OrderTypeEnum = 1 | 2;
export type PagerInfo = {
  totalRowCount: number;
  pageSize: number;
  startIndex: number;
  pageIndex: number;
  hasPrev: boolean;
  hasNext: boolean;
  isFirst: boolean;
  isLast: boolean;
  totalPageCount: number;
};
export type ApisDTO = {
  /**
   * 主键
   */
  id: string;
  /**
   * 组
   */
  group: string | null;
  /**
   * 路径
   */
  url: string | null;
  /**
   * 版本
   */
  version: number;
  /**
   * 描述
   */
  description: string | null;
  /**
   * 请求方法
   */
  method: string | null;
};
export type ApisDTOPagedResults = {
  pagerInfo: PagerInfo;
  data: ApisDTO[] | null;
};
export type ApisTreeSelectDTO = {
  id: string;
  label: string | null;
  children: ApisTreeSelectDTO[] | null;
};
export type UpdateDeptParam = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 部门名称
   */
  name: string | null;
  /**
   * 父级部门ID
   */
  parentId: string;
  /**
   * 排序
   */
  sort: number;
  /**
   * 是否启用
   */
  enabled: boolean;
  /**
   * 子节点个数
   */
  subCount: number;
  /**
   * 用户列表
   */
  users: User[] | null;
  /**
   * 用户集合
   */
  roles: Role[] | null;
};
export type DeptInfo = {
  /**
   * ID
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否删除
   */
  isDeleted: boolean;
  /**
   * 名称
   */
  name: string | null;
};
export type DeptDTO = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否删除
   */
  isDeleted: boolean;
  /**
   * 部门名称
   */
  name: string | null;
  /**
   * 父级部门ID
   */
  parentId: string;
  /**
   * 排序
   */
  sort: number;
  /**
   * 是否启用
   */
  enabled: boolean;
  /**
   * 子节点个数
   */
  subCount: number;
  /**
   * 子节点
   */
  children: DeptDTO[] | null;
};
export type DeptDTOPagedResults = {
  pagerInfo: PagerInfo;
  data: DeptDTO[] | null;
};
export type UpdateI18nParam = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 键
   */
  key: string | null;
  /**
   * 中文
   */
  zhCn: string | null;
  /**
   * 英文
   */
  enUs: string | null;
  /**
   * 来源
   */
  source: string | null;
  /**
   * 访问次数
   */
  count: number;
};
export type I18nDTO = {
  /**
   * 主键
   */
  id: string;
  /**
   * 键
   */
  key: string | null;
  /**
   * 中文
   */
  zhCn: string | null;
  /**
   * 英文
   */
  enUs: string | null;
  /**
   * 来源
   */
  source: string | null;
  /**
   * 访问次数
   */
  count: number;
};
export type I18nDTOPagedResults = {
  pagerInfo: PagerInfo;
  data: I18nDTO[] | null;
};
export type UpdateJobParam = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 名称
   */
  name: string | null;
  /**
   * 编号
   */
  code: string | null;
  /**
   * 排序
   */
  sort: number;
  /**
   * 是否激活
   */
  enabled: boolean;
  /**
   * 用户列表
   */
  users: User[] | null;
};
export type JobInfo = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 名称
   */
  name: string | null;
  /**
   * 编号
   */
  code: string | null;
  /**
   * 排序
   */
  sort: number;
  /**
   * 是否激活
   */
  enabled: boolean;
  /**
   * 用户列表
   */
  users: User[] | null;
};
export type JobDTO = {
  /**
   * 主键
   */
  id: string;
  /**
   * 名称
   */
  name: string | null;
  /**
   * 编号
   */
  code: string | null;
  /**
   * 排序
   */
  sort: number;
  /**
   * 是否激活
   */
  enabled: boolean;
};
export type JobDTOPagedResults = {
  pagerInfo: PagerInfo;
  data: JobDTO[] | null;
};
export type CaptchaVo = {
  /**
   * 图片base64
   */
  img: string | null;
  /**
   * 验证码ID
   */
  captchaId: string | null;
  /**
   * 是否显示验证码
   */
  showCaptcha: boolean;
};
export type MenuButton = {
  id: string;
  /**
   * 按钮编码
   */
  code: string | null;
  /**
   * 描述
   */
  desc: string | null;
  /**
   * 父级Id
   */
  parentId: string | null;
  /**
   * 状态
   */
  status: boolean;
};
export type MenuQuery = {
  id: string;
  /**
   * 父级Id
   */
  parentId: string | null;
  key: string | null;
  value: string | null;
  /**
   * 状态
   */
  status: boolean;
};
export type MenuInfo = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 权限标识符
   */
  permission: string | null;
  /**
   * 菜单名
   */
  name: string | null;
  /**
   * 路径
   */
  pathParam: string | null;
  layout: LayoutTypeEnum;
  /**
   * 重定向
   */
  redirect: string | null;
  /**
   * 组件
   */
  component: string | null;
  /**
   * 父级
   */
  parentId: string | null;
  menuType: MenuType;
  iconType: IconTypeEnum;
  /**
   * 状态
   */
  status: boolean;
  /**
   * 路由标题(可用来作document.title或者菜单的名称)
   */
  title: string | null;
  /**
   * 缓存页面
   */
  keepAlive: boolean;
  /**
   * 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
   */
  constant: boolean;
  /**
   * 菜单和面包屑对应的图标
   */
  icon: string | null;
  /**
   * 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
   */
  localIcon: string | null;
  /**
   * 菜单和面包屑对应的图标的字体大小
   */
  iconFontSize: number;
  /**
   * 路由顺序，可用于菜单的排序
   */
  order: number;
  /**
   * 外链链接
   */
  href: string | null;
  /**
   * 是否在菜单中隐藏路线
   */
  hideInMenu: boolean;
  /**
   * 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
   */
  activeMenu: string | null;
  /**
   * 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
   */
  multiTab: boolean;
  /**
   * 如果设置，路线将固定在制表符中，值是固定制表符的顺序
   */
  fixedIndexInTab: number;
  props: boolean;
  /**
   * 子菜单集合
   */
  children: Menu[] | null;
  /**
   * 菜单集合
   */
  roles: Role[] | null;
  buttons: MenuButton[] | null;
  querys: MenuQuery[] | null;
};
export type RoleInfo = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否删除
   */
  isDeleted: boolean;
  /**
   * 名称
   */
  name: string | null;
  /**
   * 等级
   */
  level: number;
  /**
   * 描述
   */
  description: string | null;
  dataScopeType: DataScopeType;
  /**
   * 权限标识
   */
  permission: string | null;
  /**
   * 菜单列表
   */
  menus: MenuInfo[] | null;
  /**
   * 部门列表
   */
  depts: DeptInfo[] | null;
  /**
   * 菜单列表
   */
  apis: Apis[] | null;
};
export type UserInfo = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否删除
   */
  isDeleted: boolean;
  /**
   * 用户名
   */
  userName: string | null;
  /**
   * 昵称
   */
  nickName: string | null;
  /**
   * 邮箱
   */
  email: string | null;
  /**
   * 内置管理员
   */
  isAdmin: boolean;
  /**
   * 是否激活
   */
  enabled: boolean;
  /**
   * 密码
   */
  password: string | null;
  /**
   * 部门
   */
  deptId: string;
  /**
   * 电话
   */
  phone: string | null;
  /**
   * 头像文件路径
   */
  avatarPath: string | null;
  /**
   * 性别
   */
  gender: string | null;
  /**
   * 最后修改密码时间
   */
  passwordReSetTime: string | null;
  /**
   * 角色列表
   */
  roles: RoleInfo[] | null;
  dept: DeptInfo;
  /**
   * 租户ID
   */
  tenantId: number;
};
export type JwtUserInfo = {
  /**
   * 详情
   */
  user: UserInfo;
  /**
   * 角色权限
   */
  roles: string[] | null;
  /**
   * 数据权限
   */
  dataScopes: string[] | null;
};
export type LoginToken = {
  /**
   * 授权token
   */
  accessToken: string | null;
  /**
   * 过期时间
   */
  expires: number;
  /**
   * 类型
   */
  tokenType: string | null;
  /**
   * 刷新token
   */
  refreshToken: string | null;
  /**
   * 允许token时间内
   */
  refreshTokenExpires: number;
};
export type LoginParam = {
  /**
   * 用户名
   * [required]
   */
  userName: string;
  /**
   * 密码
   * [required]
   */
  password: string;
  /**
   * 验证码
   */
  captcha: string | null;
  /**
   * 验证码ID
   */
  captchaId: string | null;
};
export type UpdateMenuParam = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 权限标识符
   */
  permission: string | null;
  /**
   * 菜单名
   */
  name: string | null;
  /**
   * 路径
   */
  pathParam: string | null;
  layout: LayoutTypeEnum;
  /**
   * 重定向
   */
  redirect: string | null;
  /**
   * 组件
   */
  component: string | null;
  /**
   * 父级
   */
  parentId: string | null;
  menuType: MenuType;
  iconType: IconTypeEnum;
  /**
   * 状态
   */
  status: boolean;
  /**
   * 路由标题(可用来作document.title或者菜单的名称)
   */
  title: string | null;
  /**
   * 缓存页面
   */
  keepAlive: boolean;
  /**
   * 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
   */
  constant: boolean;
  /**
   * 菜单和面包屑对应的图标
   */
  icon: string | null;
  /**
   * 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
   */
  localIcon: string | null;
  /**
   * 菜单和面包屑对应的图标的字体大小
   */
  iconFontSize: number;
  /**
   * 路由顺序，可用于菜单的排序
   */
  order: number;
  /**
   * 外链链接
   */
  href: string | null;
  /**
   * 是否在菜单中隐藏路线
   */
  hideInMenu: boolean;
  /**
   * 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
   */
  activeMenu: string | null;
  /**
   * 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
   */
  multiTab: boolean;
  /**
   * 如果设置，路线将固定在制表符中，值是固定制表符的顺序
   */
  fixedIndexInTab: number;
  props: boolean;
  /**
   * 子菜单集合
   */
  children: Menu[] | null;
  /**
   * 菜单集合
   */
  roles: Role[] | null;
  buttons: MenuButton[] | null;
  querys: MenuQuery[] | null;
};
export type RouteMeta = {
  /**
   * 路由标题(可用来作document.title或者菜单的名称)
   */
  title: string | null;
  /**
   * 权限标识
   */
  roles: string[] | null;
  /**
   * 缓存页面
   */
  keepAlive: boolean;
  /**
   * 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
   */
  constant: boolean;
  /**
   * 菜单和面包屑对应的图标
   */
  icon: string | null;
  /**
   * 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
   */
  localIcon: string | null;
  /**
   * 菜单和面包屑对应的图标的字体大小
   */
  iconFontSize: number | null;
  /**
   * 路由顺序，可用于菜单的排序
   */
  order: number;
  /**
   * 外链链接
   */
  href: string | null;
  /**
   * 是否在菜单中隐藏路线
   */
  hideInMenu: boolean;
  /**
   * 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
   */
  activeMenu: string | null;
  /**
   * 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
   */
  multiTab: boolean;
  /**
   * 如果设置，路线将固定在制表符中，值是固定制表符的顺序
   */
  fixedIndexInTab: number | null;
  /**
   * 跳转参数
   */
  query: MenuQuery[] | null;
};
export type RouteDTO = {
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否删除
   */
  isDeleted: boolean;
  /**
   * 菜单名
   */
  name: string | null;
  /**
   * 路径
   */
  path: string | null;
  /**
   * 重定向
   */
  redirect: string | null;
  /**
   * 组件
   */
  component: string | null;
  /**
   * 父级
   */
  parentId: string | null;
  type: MenuType;
  /**
   * 状态
   */
  status: boolean;
  meta: RouteMeta;
  props: boolean;
  /**
   * 子节点
   */
  children: RouteDTO[] | null;
};
export type MenuTreeDTO = {
  id: string;
  /**
   * 菜单标题
   */
  title: string | null;
  /**
   * 路由名称
   */
  name: string | null;
  /**
   * 父级菜单ID
   */
  parentId: string | null;
  /**
   * 排序
   */
  order: number;
  /**
   * icon图标
   */
  icon: string | null;
  iconType: IconTypeEnum;
  menuType: MenuType;
  /**
   * 是否隐藏
   */
  hideInMenu: boolean;
  /**
   * 跳转路由
   */
  redirect: string | null;
  /**
   * 根目录始终显示
   */
  alwaysShow: boolean;
  /**
   * 状态
   */
  status: boolean;
  children: MenuTreeDTO[] | null;
};
export type RouteTreeSelectDTO = {
  id: string;
  /**
   * 父级ID
   */
  parentId: string | null;
  /**
   * 标题
   */
  title: string | null;
  menuType: MenuType;
  children: RouteTreeSelectDTO[] | null;
};
export type RoleDeptDto = {
  /**
   * ID
   */
  id: string;
};
export type RoleMenuDto = {
  /**
   * ID
   */
  id: string;
};
export type RoleApisDto = {
  /**
   * ID
   */
  id: string;
};
export type UpdateRoleParam = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否删除
   */
  isDeleted: boolean;
  /**
   * 名称
   * [required]
   */
  name: string;
  /**
   * 等级
   */
  level: number;
  /**
   * 描述
   */
  description: string | null;
  dataScopeType: DataScopeType;
  /**
   * 标识
   * [required]
   */
  permission: string;
  /**
   * 角色部门
   */
  depts: RoleDeptDto[] | null;
  /**
   * 角色菜单
   */
  menus: RoleMenuDto[] | null;
  /**
   * 角色菜单
   */
  apis: RoleApisDto[] | null;
};
export type RoleDTO = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否删除
   */
  isDeleted: boolean;
  /**
   * 名称
   */
  name: string | null;
  /**
   * 等级
   */
  level: number;
  /**
   * 描述
   */
  description: string | null;
  dataScopeType: DataScopeType;
  /**
   * 权限标识
   */
  permission: string | null;
  /**
   * 菜单列表
   */
  menuList: RouteDTO[] | null;
  /**
   * 部门列表
   */
  deptList: DeptDTO[] | null;
  /**
   * 菜单列表
   */
  apis: Apis[] | null;
};
export type RoleDTOPagedResults = {
  pagerInfo: PagerInfo;
  data: RoleDTO[] | null;
};
export type RolePermissionParam = {
  roleId: string;
  menuIds: string[] | null;
  def: string[] | null;
  pc: string[] | null;
  app: string[] | null;
};
export type ObjectPagedResults = {
  pagerInfo: PagerInfo;
  data: unknown[] | null;
};
export type ColumnTypeEnum = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 50 | 99;
export type TableForm = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 表名
   */
  tableof: string | null;
  /**
   * 路由
   */
  router: string | null;
  /**
   * 多余参数
   */
  attrs: string | null;
  /**
   * 多余参数
   */
  configId: string | null;
  /**
   * 字段
   */
  items: TableFormItem[] | null;
};
export type TableFormItem = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 视图Id
   */
  formId: string;
  /**
   * 字段名称
   */
  label: string | null;
  /**
   * 字段
   */
  prop: string | null;
  /**
   * 字段验证
   */
  rules: string | null;
  /**
   * 排序
   */
  sort: number;
  componentType: ColumnTypeEnum;
  /**
   * 是否隐藏
   */
  isShow: boolean;
  /**
   * 是否自定义
   */
  isCustom: boolean;
  /**
   * 多余参数
   */
  attrs: string | null;
  /**
   * 表格重写
   */
  tableForm: TableForm;
};
export type UpdateTableFormParam = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 表名
   */
  tableof: string | null;
  /**
   * 路由
   */
  router: string | null;
  /**
   * 多余参数
   */
  attrs: string | null;
  /**
   * 多余参数
   */
  configId: string | null;
  /**
   * 字段
   */
  items: TableFormItem[] | null;
};
export type SetAttrsFormItemParam = {
  /**
   * 字段Id
   */
  id: string;
  /**
   * 字段
   */
  attrs: string | null;
};
export type SortParam = {
  id: string;
  sort: number;
};
export type ConditionalType = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16;
export type TableColumn = {
  /**
   * 字段名称
   */
  label: string | null;
  /**
   * 字段
   */
  prop: string | null;
  searchType: ConditionalType;
  columnType: ColumnTypeEnum;
  /**
   * 字段描述
   */
  columnTypeDetail: string | null;
  /**
   * 字段验证
   */
  columnTypeRules: string | null;
  /**
   * 是否自定义
   */
  isCustom: boolean;
  /**
   * 排序
   */
  sort: number;
  /**
   * 是否隐藏
   */
  isShow: boolean;
  isEditDel: boolean;
  /**
   * 多余参数
   */
  attrs: string | null;
};
export type TableViewInfo = {
  /**
   * 主键
   */
  id: string;
  /**
   * 配置库
   */
  configId: string | null;
  /**
   * 路由
   */
  router: string | null;
  /**
   * 表名
   * [required]
   */
  tableof: string;
  /**
   * 多余参数
   */
  attrs: string | null;
  /**
   * 字段
   */
  columnsString: string | null;
  /**
   * 默认排序字段
   */
  sortString: string | null;
  /**
   * 字段
   */
  columns: TableColumn[] | null;
  /**
   * 多列排序
   */
  sorts: Record<string, OrderTypeEnum> | null;
};
export type TableView = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 配置库
   */
  configId: string | null;
  /**
   * 路由
   */
  router: string | null;
  /**
   * 表名
   * [required]
   */
  tableof: string;
  /**
   * 多余参数
   */
  attrs: string | null;
  /**
   * 字段
   */
  columnsString: string | null;
  /**
   * 默认排序字段
   */
  sortString: string | null;
  /**
   * 字段
   */
  columns: TableColumn[] | null;
  /**
   * 多列排序
   */
  sorts: Record<string, OrderTypeEnum> | null;
};
export type UpdateTableViewParam = {
  /**
   * 主键
   */
  id: string;
  /**
   * 配置库
   */
  configId: string | null;
  /**
   * 路由
   */
  router: string | null;
  /**
   * 表名
   * [required]
   */
  tableof: string;
  /**
   * 多余参数
   */
  attrs: string | null;
  /**
   * 字段
   */
  columns: TableColumn[] | null;
  /**
   * 默认排序字段
   * [required]
   */
  sorts: Record<string, OrderTypeEnum>;
};
export type UpdateTenantParam = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 租户Id
   */
  tenantId: number;
  /**
   * 名称
   */
  name: string | null;
  /**
   * 描述
   */
  description: string | null;
  /**
   * 租户类型
   */
  tenantType: TenantType;
  /**
   * 库Id
   */
  configId: string | null;
  dbType: DbType;
  /**
   * 数据库连接
   */
  connectionString: string | null;
  /**
   * 用户列表
   */
  users: User[] | null;
};
export type TenantInfo = {
  /**
   * 主键
   */
  id: string;
  /**
   * 创建者名称
   */
  createBy: string | null;
  /**
   * 创建时间
   */
  createTime: string;
  /**
   * 更新者名称
   */
  updateBy: string | null;
  /**
   * 最后更新时间
   */
  updateTime: string | null;
  /**
   * 是否已删除
   */
  isDeleted: boolean;
  /**
   * 租户Id
   */
  tenantId: number;
  /**
   * 名称
   */
  name: string | null;
  /**
   * 描述
   */
  description: string | null;
  /**
   * 租户类型
   */
  tenantType: TenantType;
  /**
   * 库Id
   */
  configId: string | null;
  dbType: DbType;
  /**
   * 数据库连接
   */
  connectionString: string | null;
  /**
   * 用户列表
   */
  users: User[] | null;
};
export type TenantDTO = {
  /**
   * 主键
   */
  id: string;
};
export type TenantDTOPagedResults = {
  pagerInfo: PagerInfo;
  data: TenantDTO[] | null;
};
declare global {
  interface Apis {
    Apis: {
      /**
       * ---
       *
       * [POST] 新增
       *
       * **path:** /api/Apis/Add
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 创建者名称
       *   createBy: string | null
       *   // 创建时间
       *   createTime: string
       *   // 更新者名称
       *   updateBy: string | null
       *   // 最后更新时间
       *   updateTime: string | null
       *   // 是否已删除
       *   isDeleted: boolean
       *   // 组
       *   group: string | null
       *   // 路径
       *   url: string | null
       *   // 版本
       *   version: number
       *   // 描述
       *   description: string | null
       *   // 请求方法
       *   method: string | null
       *   // 角色集合
       *   roles: Array<{
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 角色名称
       *     name: string | null
       *     // 角色等级
       *     level: number
       *     // 描述
       *     description: string | null
       *     dataScopeType: 0 | 1 | 2 | 3 | 4 | 5
       *     // 角色代码
       *     permission: string | null
       *     // 菜单集合
       *     menus: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 权限标识符
       *       permission: string | null
       *       // 菜单名
       *       name: string | null
       *       // 路径
       *       pathParam: string | null
       *       layout: 1 | 2
       *       // 重定向
       *       redirect: string | null
       *       // 组件
       *       component: string | null
       *       // 父级
       *       parentId: string | null
       *       menuType: 1 | 2 | 3 | 4
       *       iconType: 1 | 2
       *       // 状态
       *       status: boolean
       *       // 路由标题(可用来作document.title或者菜单的名称)
       *       title: string | null
       *       // 缓存页面
       *       keepAlive: boolean
       *       // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *       constant: boolean
       *       // 菜单和面包屑对应的图标
       *       icon: string | null
       *       // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *       localIcon: string | null
       *       // 菜单和面包屑对应的图标的字体大小
       *       iconFontSize: number
       *       // 路由顺序，可用于菜单的排序
       *       order: number
       *       // 外链链接
       *       href: string | null
       *       // 是否在菜单中隐藏路线
       *       hideInMenu: boolean
       *       // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *       activeMenu: string | null
       *       // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *       multiTab: boolean
       *       // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *       fixedIndexInTab: number
       *       props: boolean
       *       // 子菜单集合
       *       children: Array<Menu> | null
       *       // 菜单集合
       *       roles: Array<Role> | null
       *     }> | null
       *     // 部门集合
       *     depts: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 部门名称
       *       name: string | null
       *       // 父级部门ID
       *       parentId: string
       *       // 排序
       *       sort: number
       *       // 是否启用
       *       enabled: boolean
       *       // 子节点个数
       *       subCount: number
       *       // 用户列表
       *       users: Array<{
       *         // 主键
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否已删除
       *         isDeleted: boolean
       *         // 用户名
       *         userName: string | null
       *         // 昵称
       *         nickName: string | null
       *         // 邮箱
       *         email: string | null
       *         // 是否内置管理员
       *         isAdmin: boolean
       *         // 是否激活
       *         enabled: boolean
       *         // 密码
       *         password: string | null
       *         // 部门
       *         deptId: string
       *         // 电话
       *         phone: string | null
       *         // 头像路径
       *         avatarPath: string | null
       *         // 最后修改密码时间
       *         passwordReSetTime: string | null
       *         // 性别
       *         gender: string | null
       *         // 租户ID
       *         tenantId: number
       *         // 部门
       *         dept: Dept
       *         // 角色集合
       *         roles: Array<Role> | null
       *         // 岗位集合
       *         jobs: Array<{
       *           // 主键
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否已删除
       *           isDeleted: boolean
       *           // 名称
       *           name: string | null
       *           // 编号
       *           code: string | null
       *           // 排序
       *           sort: number
       *           // 是否激活
       *           enabled: boolean
       *           // 用户列表
       *           users: Array<User> | null
       *         }> | null
       *         // 租户
       *         tenant: {
       *           // 主键
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否已删除
       *           isDeleted: boolean
       *           // 租户Id
       *           tenantId: number
       *           // 名称
       *           name: string | null
       *           // 描述
       *           description: string | null
       *           // 租户类型
       *           tenantType: 1 | 2
       *           // 库Id
       *           configId: string | null
       *           dbType:
       *             | 0
       *             | 1
       *             | 2
       *             | 3
       *             | 4
       *             | 5
       *             | 6
       *             | 7
       *             | 8
       *             | 9
       *             | 10
       *             | 11
       *             | 12
       *             | 13
       *             | 14
       *             | 15
       *             | 16
       *             | 17
       *             | 18
       *             | 19
       *             | 20
       *             | 21
       *             | 22
       *             | 23
       *             | 24
       *             | 25
       *             | 26
       *             | 27
       *             | 28
       *             | 29
       *             | 30
       *             | 31
       *             | 900
       *           // 数据库连接
       *           connectionString: string | null
       *           // 用户列表
       *           users: Array<User> | null
       *         }
       *       }> | null
       *       // 用户集合
       *       roles: Array<Role> | null
       *     }> | null
       *     // 用户列表
       *     users: Array<User> | null
       *     // 菜单集合
       *     apis: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 组
       *       group: string | null
       *       // 路径
       *       url: string | null
       *       // 版本
       *       version: number
       *       // 描述
       *       description: string | null
       *       // 请求方法
       *       method: string | null
       *       // 角色集合
       *       roles: Array<Role> | null
       *     }> | null
       *   }> | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_add<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateApisParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Apis.post_add',
        Config
      >;
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/Apis/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = string[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: string[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Apis.delete_delete',
        Config
      >;
      /**
       * ---
       *
       * [GET] 分页
       *
       * **path:** /api/Apis/GetPage
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   Version: 0 | 1 | 2
       *   StartIndex: number
       *   PageIndex: number
       *   PageSize: number
       *   Search: Record<string, Record<string, string> | null>
       *   SortList: Record<string, 1 | 2>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     pagerInfo: {
       *       totalRowCount: number
       *       pageSize: number
       *       startIndex: number
       *       pageIndex: number
       *       hasPrev: boolean
       *       hasNext: boolean
       *       isFirst: boolean
       *       isLast: boolean
       *       totalPageCount: number
       *     }
       *     data: Array<{
       *       // 主键
       *       id: string
       *       // 组
       *       group: string | null
       *       // 路径
       *       url: string | null
       *       // 版本
       *       version: number
       *       // 描述
       *       description: string | null
       *       // 请求方法
       *       method: string | null
       *     }> | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_getpage<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: ApisDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            Version: VersionEnum;
            StartIndex: number;
            PageIndex: number;
            PageSize: number;
            Search: Record<string, Record<string, string> | null>;
            SortList: Record<string, OrderTypeEnum>;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: ApisDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Apis.get_getpage',
        Config
      >;
      /**
       * ---
       *
       * [GET] 刷新Api列表
       *
       * **path:** /api/Apis/Refresh
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   version: 0 | 1 | 2
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: unknown
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_refresh<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            version: VersionEnum;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Apis.get_refresh',
        Config
      >;
      /**
       * ---
       *
       * [GET] 获取树图
       *
       * **path:** /api/Apis/TreeSelect
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   version: 0 | 1 | 2
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     id: string
       *     label: string | null
       *     children: Array<ApisTreeSelectDTO> | null
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_treeselect<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: ApisTreeSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            version: VersionEnum;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: ApisTreeSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Apis.get_treeselect',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 编辑
       *
       * **path:** /api/Apis/Update
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 创建者名称
       *   createBy: string | null
       *   // 创建时间
       *   createTime: string
       *   // 更新者名称
       *   updateBy: string | null
       *   // 最后更新时间
       *   updateTime: string | null
       *   // 是否已删除
       *   isDeleted: boolean
       *   // 组
       *   group: string | null
       *   // 路径
       *   url: string | null
       *   // 版本
       *   version: number
       *   // 描述
       *   description: string | null
       *   // 请求方法
       *   method: string | null
       *   // 角色集合
       *   roles: Array<{
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 角色名称
       *     name: string | null
       *     // 角色等级
       *     level: number
       *     // 描述
       *     description: string | null
       *     dataScopeType: 0 | 1 | 2 | 3 | 4 | 5
       *     // 角色代码
       *     permission: string | null
       *     // 菜单集合
       *     menus: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 权限标识符
       *       permission: string | null
       *       // 菜单名
       *       name: string | null
       *       // 路径
       *       pathParam: string | null
       *       layout: 1 | 2
       *       // 重定向
       *       redirect: string | null
       *       // 组件
       *       component: string | null
       *       // 父级
       *       parentId: string | null
       *       menuType: 1 | 2 | 3 | 4
       *       iconType: 1 | 2
       *       // 状态
       *       status: boolean
       *       // 路由标题(可用来作document.title或者菜单的名称)
       *       title: string | null
       *       // 缓存页面
       *       keepAlive: boolean
       *       // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *       constant: boolean
       *       // 菜单和面包屑对应的图标
       *       icon: string | null
       *       // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *       localIcon: string | null
       *       // 菜单和面包屑对应的图标的字体大小
       *       iconFontSize: number
       *       // 路由顺序，可用于菜单的排序
       *       order: number
       *       // 外链链接
       *       href: string | null
       *       // 是否在菜单中隐藏路线
       *       hideInMenu: boolean
       *       // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *       activeMenu: string | null
       *       // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *       multiTab: boolean
       *       // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *       fixedIndexInTab: number
       *       props: boolean
       *       // 子菜单集合
       *       children: Array<Menu> | null
       *       // 菜单集合
       *       roles: Array<Role> | null
       *     }> | null
       *     // 部门集合
       *     depts: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 部门名称
       *       name: string | null
       *       // 父级部门ID
       *       parentId: string
       *       // 排序
       *       sort: number
       *       // 是否启用
       *       enabled: boolean
       *       // 子节点个数
       *       subCount: number
       *       // 用户列表
       *       users: Array<{
       *         // 主键
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否已删除
       *         isDeleted: boolean
       *         // 用户名
       *         userName: string | null
       *         // 昵称
       *         nickName: string | null
       *         // 邮箱
       *         email: string | null
       *         // 是否内置管理员
       *         isAdmin: boolean
       *         // 是否激活
       *         enabled: boolean
       *         // 密码
       *         password: string | null
       *         // 部门
       *         deptId: string
       *         // 电话
       *         phone: string | null
       *         // 头像路径
       *         avatarPath: string | null
       *         // 最后修改密码时间
       *         passwordReSetTime: string | null
       *         // 性别
       *         gender: string | null
       *         // 租户ID
       *         tenantId: number
       *         // 部门
       *         dept: Dept
       *         // 角色集合
       *         roles: Array<Role> | null
       *         // 岗位集合
       *         jobs: Array<{
       *           // 主键
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否已删除
       *           isDeleted: boolean
       *           // 名称
       *           name: string | null
       *           // 编号
       *           code: string | null
       *           // 排序
       *           sort: number
       *           // 是否激活
       *           enabled: boolean
       *           // 用户列表
       *           users: Array<User> | null
       *         }> | null
       *         // 租户
       *         tenant: {
       *           // 主键
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否已删除
       *           isDeleted: boolean
       *           // 租户Id
       *           tenantId: number
       *           // 名称
       *           name: string | null
       *           // 描述
       *           description: string | null
       *           // 租户类型
       *           tenantType: 1 | 2
       *           // 库Id
       *           configId: string | null
       *           dbType:
       *             | 0
       *             | 1
       *             | 2
       *             | 3
       *             | 4
       *             | 5
       *             | 6
       *             | 7
       *             | 8
       *             | 9
       *             | 10
       *             | 11
       *             | 12
       *             | 13
       *             | 14
       *             | 15
       *             | 16
       *             | 17
       *             | 18
       *             | 19
       *             | 20
       *             | 21
       *             | 22
       *             | 23
       *             | 24
       *             | 25
       *             | 26
       *             | 27
       *             | 28
       *             | 29
       *             | 30
       *             | 31
       *             | 900
       *           // 数据库连接
       *           connectionString: string | null
       *           // 用户列表
       *           users: Array<User> | null
       *         }
       *       }> | null
       *       // 用户集合
       *       roles: Array<Role> | null
       *     }> | null
       *     // 用户列表
       *     users: Array<User> | null
       *     // 菜单集合
       *     apis: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 组
       *       group: string | null
       *       // 路径
       *       url: string | null
       *       // 版本
       *       version: number
       *       // 描述
       *       description: string | null
       *       // 请求方法
       *       method: string | null
       *       // 角色集合
       *       roles: Array<Role> | null
       *     }> | null
       *   }> | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_update<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateApisParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Apis.put_update',
        Config
      >;
    };
    Dept: {
      /**
       * ---
       *
       * [POST] 新增
       *
       * **path:** /api/Dept/Add
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 创建者名称
       *   createBy: string | null
       *   // 创建时间
       *   createTime: string
       *   // 更新者名称
       *   updateBy: string | null
       *   // 最后更新时间
       *   updateTime: string | null
       *   // 是否已删除
       *   isDeleted: boolean
       *   // 部门名称
       *   name: string | null
       *   // 父级部门ID
       *   parentId: string
       *   // 排序
       *   sort: number
       *   // 是否启用
       *   enabled: boolean
       *   // 子节点个数
       *   subCount: number
       *   // 用户列表
       *   users: Array<{
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 用户名
       *     userName: string | null
       *     // 昵称
       *     nickName: string | null
       *     // 邮箱
       *     email: string | null
       *     // 是否内置管理员
       *     isAdmin: boolean
       *     // 是否激活
       *     enabled: boolean
       *     // 密码
       *     password: string | null
       *     // 部门
       *     deptId: string
       *     // 电话
       *     phone: string | null
       *     // 头像路径
       *     avatarPath: string | null
       *     // 最后修改密码时间
       *     passwordReSetTime: string | null
       *     // 性别
       *     gender: string | null
       *     // 租户ID
       *     tenantId: number
       *     // 部门
       *     dept: Dept
       *     // 角色集合
       *     roles: Array<Role> | null
       *     // 岗位集合
       *     jobs: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 名称
       *       name: string | null
       *       // 编号
       *       code: string | null
       *       // 排序
       *       sort: number
       *       // 是否激活
       *       enabled: boolean
       *       // 用户列表
       *       users: Array<User> | null
       *     }> | null
       *     // 租户
       *     tenant: {
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 租户Id
       *       tenantId: number
       *       // 名称
       *       name: string | null
       *       // 描述
       *       description: string | null
       *       // 租户类型
       *       tenantType: 1 | 2
       *       // 库Id
       *       configId: string | null
       *       dbType:
       *         | 0
       *         | 1
       *         | 2
       *         | 3
       *         | 4
       *         | 5
       *         | 6
       *         | 7
       *         | 8
       *         | 9
       *         | 10
       *         | 11
       *         | 12
       *         | 13
       *         | 14
       *         | 15
       *         | 16
       *         | 17
       *         | 18
       *         | 19
       *         | 20
       *         | 21
       *         | 22
       *         | 23
       *         | 24
       *         | 25
       *         | 26
       *         | 27
       *         | 28
       *         | 29
       *         | 30
       *         | 31
       *         | 900
       *       // 数据库连接
       *       connectionString: string | null
       *       // 用户列表
       *       users: Array<User> | null
       *     }
       *   }> | null
       *   // 用户集合
       *   roles: Array<{
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 角色名称
       *     name: string | null
       *     // 角色等级
       *     level: number
       *     // 描述
       *     description: string | null
       *     dataScopeType: 0 | 1 | 2 | 3 | 4 | 5
       *     // 角色代码
       *     permission: string | null
       *     // 菜单集合
       *     menus: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 权限标识符
       *       permission: string | null
       *       // 菜单名
       *       name: string | null
       *       // 路径
       *       pathParam: string | null
       *       layout: 1 | 2
       *       // 重定向
       *       redirect: string | null
       *       // 组件
       *       component: string | null
       *       // 父级
       *       parentId: string | null
       *       menuType: 1 | 2 | 3 | 4
       *       iconType: 1 | 2
       *       // 状态
       *       status: boolean
       *       // 路由标题(可用来作document.title或者菜单的名称)
       *       title: string | null
       *       // 缓存页面
       *       keepAlive: boolean
       *       // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *       constant: boolean
       *       // 菜单和面包屑对应的图标
       *       icon: string | null
       *       // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *       localIcon: string | null
       *       // 菜单和面包屑对应的图标的字体大小
       *       iconFontSize: number
       *       // 路由顺序，可用于菜单的排序
       *       order: number
       *       // 外链链接
       *       href: string | null
       *       // 是否在菜单中隐藏路线
       *       hideInMenu: boolean
       *       // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *       activeMenu: string | null
       *       // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *       multiTab: boolean
       *       // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *       fixedIndexInTab: number
       *       props: boolean
       *       // 子菜单集合
       *       children: Array<Menu> | null
       *       // 菜单集合
       *       roles: Array<Role> | null
       *     }> | null
       *     // 部门集合
       *     depts: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 部门名称
       *       name: string | null
       *       // 父级部门ID
       *       parentId: string
       *       // 排序
       *       sort: number
       *       // 是否启用
       *       enabled: boolean
       *       // 子节点个数
       *       subCount: number
       *       // 用户列表
       *       users: Array<{
       *         // 主键
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否已删除
       *         isDeleted: boolean
       *         // 用户名
       *         userName: string | null
       *         // 昵称
       *         nickName: string | null
       *         // 邮箱
       *         email: string | null
       *         // 是否内置管理员
       *         isAdmin: boolean
       *         // 是否激活
       *         enabled: boolean
       *         // 密码
       *         password: string | null
       *         // 部门
       *         deptId: string
       *         // 电话
       *         phone: string | null
       *         // 头像路径
       *         avatarPath: string | null
       *         // 最后修改密码时间
       *         passwordReSetTime: string | null
       *         // 性别
       *         gender: string | null
       *         // 租户ID
       *         tenantId: number
       *         // 部门
       *         dept: Dept
       *         // 角色集合
       *         roles: Array<Role> | null
       *         // 岗位集合
       *         jobs: Array<{
       *           // 主键
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否已删除
       *           isDeleted: boolean
       *           // 名称
       *           name: string | null
       *           // 编号
       *           code: string | null
       *           // 排序
       *           sort: number
       *           // 是否激活
       *           enabled: boolean
       *           // 用户列表
       *           users: Array<User> | null
       *         }> | null
       *         // 租户
       *         tenant: {
       *           // 主键
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否已删除
       *           isDeleted: boolean
       *           // 租户Id
       *           tenantId: number
       *           // 名称
       *           name: string | null
       *           // 描述
       *           description: string | null
       *           // 租户类型
       *           tenantType: 1 | 2
       *           // 库Id
       *           configId: string | null
       *           dbType:
       *             | 0
       *             | 1
       *             | 2
       *             | 3
       *             | 4
       *             | 5
       *             | 6
       *             | 7
       *             | 8
       *             | 9
       *             | 10
       *             | 11
       *             | 12
       *             | 13
       *             | 14
       *             | 15
       *             | 16
       *             | 17
       *             | 18
       *             | 19
       *             | 20
       *             | 21
       *             | 22
       *             | 23
       *             | 24
       *             | 25
       *             | 26
       *             | 27
       *             | 28
       *             | 29
       *             | 30
       *             | 31
       *             | 900
       *           // 数据库连接
       *           connectionString: string | null
       *           // 用户列表
       *           users: Array<User> | null
       *         }
       *       }> | null
       *       // 用户集合
       *       roles: Array<Role> | null
       *     }> | null
       *     // 用户列表
       *     users: Array<User> | null
       *     // 菜单集合
       *     apis: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 组
       *       group: string | null
       *       // 路径
       *       url: string | null
       *       // 版本
       *       version: number
       *       // 描述
       *       description: string | null
       *       // 请求方法
       *       method: string | null
       *       // 角色集合
       *       roles: Array<Role> | null
       *     }> | null
       *   }> | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_add<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateDeptParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Dept.post_add',
        Config
      >;
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/Dept/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = string[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: string[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Dept.delete_delete',
        Config
      >;
      /**
       * ---
       *
       * [GET] 详情
       *
       * **path:** /api/Dept/GetInfo
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     // ID
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否删除
       *     isDeleted: boolean
       *     // 名称
       *     name: string | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_getinfo<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: DeptInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: DeptInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Dept.get_getinfo',
        Config
      >;
      /**
       * ---
       *
       * [GET] 分页
       *
       * **path:** /api/Dept/GetPage
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   StartIndex: number
       *   PageIndex: number
       *   PageSize: number
       *   Search: Record<string, Record<string, string> | null>
       *   SortList: Record<string, 1 | 2>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     pagerInfo: {
       *       totalRowCount: number
       *       pageSize: number
       *       startIndex: number
       *       pageIndex: number
       *       hasPrev: boolean
       *       hasNext: boolean
       *       isFirst: boolean
       *       isLast: boolean
       *       totalPageCount: number
       *     }
       *     data: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否删除
       *       isDeleted: boolean
       *       // 部门名称
       *       name: string | null
       *       // 父级部门ID
       *       parentId: string
       *       // 排序
       *       sort: number
       *       // 是否启用
       *       enabled: boolean
       *       // 子节点个数
       *       subCount: number
       *       // 子节点
       *       children: Array<DeptDTO> | null
       *     }> | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_getpage<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: DeptDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            StartIndex: number;
            PageIndex: number;
            PageSize: number;
            Search: Record<string, Record<string, string> | null>;
            SortList: Record<string, OrderTypeEnum>;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: DeptDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Dept.get_getpage',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 编辑
       *
       * **path:** /api/Dept/Update
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 创建者名称
       *   createBy: string | null
       *   // 创建时间
       *   createTime: string
       *   // 更新者名称
       *   updateBy: string | null
       *   // 最后更新时间
       *   updateTime: string | null
       *   // 是否已删除
       *   isDeleted: boolean
       *   // 部门名称
       *   name: string | null
       *   // 父级部门ID
       *   parentId: string
       *   // 排序
       *   sort: number
       *   // 是否启用
       *   enabled: boolean
       *   // 子节点个数
       *   subCount: number
       *   // 用户列表
       *   users: Array<{
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 用户名
       *     userName: string | null
       *     // 昵称
       *     nickName: string | null
       *     // 邮箱
       *     email: string | null
       *     // 是否内置管理员
       *     isAdmin: boolean
       *     // 是否激活
       *     enabled: boolean
       *     // 密码
       *     password: string | null
       *     // 部门
       *     deptId: string
       *     // 电话
       *     phone: string | null
       *     // 头像路径
       *     avatarPath: string | null
       *     // 最后修改密码时间
       *     passwordReSetTime: string | null
       *     // 性别
       *     gender: string | null
       *     // 租户ID
       *     tenantId: number
       *     // 部门
       *     dept: Dept
       *     // 角色集合
       *     roles: Array<Role> | null
       *     // 岗位集合
       *     jobs: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 名称
       *       name: string | null
       *       // 编号
       *       code: string | null
       *       // 排序
       *       sort: number
       *       // 是否激活
       *       enabled: boolean
       *       // 用户列表
       *       users: Array<User> | null
       *     }> | null
       *     // 租户
       *     tenant: {
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 租户Id
       *       tenantId: number
       *       // 名称
       *       name: string | null
       *       // 描述
       *       description: string | null
       *       // 租户类型
       *       tenantType: 1 | 2
       *       // 库Id
       *       configId: string | null
       *       dbType:
       *         | 0
       *         | 1
       *         | 2
       *         | 3
       *         | 4
       *         | 5
       *         | 6
       *         | 7
       *         | 8
       *         | 9
       *         | 10
       *         | 11
       *         | 12
       *         | 13
       *         | 14
       *         | 15
       *         | 16
       *         | 17
       *         | 18
       *         | 19
       *         | 20
       *         | 21
       *         | 22
       *         | 23
       *         | 24
       *         | 25
       *         | 26
       *         | 27
       *         | 28
       *         | 29
       *         | 30
       *         | 31
       *         | 900
       *       // 数据库连接
       *       connectionString: string | null
       *       // 用户列表
       *       users: Array<User> | null
       *     }
       *   }> | null
       *   // 用户集合
       *   roles: Array<{
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 角色名称
       *     name: string | null
       *     // 角色等级
       *     level: number
       *     // 描述
       *     description: string | null
       *     dataScopeType: 0 | 1 | 2 | 3 | 4 | 5
       *     // 角色代码
       *     permission: string | null
       *     // 菜单集合
       *     menus: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 权限标识符
       *       permission: string | null
       *       // 菜单名
       *       name: string | null
       *       // 路径
       *       pathParam: string | null
       *       layout: 1 | 2
       *       // 重定向
       *       redirect: string | null
       *       // 组件
       *       component: string | null
       *       // 父级
       *       parentId: string | null
       *       menuType: 1 | 2 | 3 | 4
       *       iconType: 1 | 2
       *       // 状态
       *       status: boolean
       *       // 路由标题(可用来作document.title或者菜单的名称)
       *       title: string | null
       *       // 缓存页面
       *       keepAlive: boolean
       *       // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *       constant: boolean
       *       // 菜单和面包屑对应的图标
       *       icon: string | null
       *       // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *       localIcon: string | null
       *       // 菜单和面包屑对应的图标的字体大小
       *       iconFontSize: number
       *       // 路由顺序，可用于菜单的排序
       *       order: number
       *       // 外链链接
       *       href: string | null
       *       // 是否在菜单中隐藏路线
       *       hideInMenu: boolean
       *       // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *       activeMenu: string | null
       *       // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *       multiTab: boolean
       *       // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *       fixedIndexInTab: number
       *       props: boolean
       *       // 子菜单集合
       *       children: Array<Menu> | null
       *       // 菜单集合
       *       roles: Array<Role> | null
       *     }> | null
       *     // 部门集合
       *     depts: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 部门名称
       *       name: string | null
       *       // 父级部门ID
       *       parentId: string
       *       // 排序
       *       sort: number
       *       // 是否启用
       *       enabled: boolean
       *       // 子节点个数
       *       subCount: number
       *       // 用户列表
       *       users: Array<{
       *         // 主键
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否已删除
       *         isDeleted: boolean
       *         // 用户名
       *         userName: string | null
       *         // 昵称
       *         nickName: string | null
       *         // 邮箱
       *         email: string | null
       *         // 是否内置管理员
       *         isAdmin: boolean
       *         // 是否激活
       *         enabled: boolean
       *         // 密码
       *         password: string | null
       *         // 部门
       *         deptId: string
       *         // 电话
       *         phone: string | null
       *         // 头像路径
       *         avatarPath: string | null
       *         // 最后修改密码时间
       *         passwordReSetTime: string | null
       *         // 性别
       *         gender: string | null
       *         // 租户ID
       *         tenantId: number
       *         // 部门
       *         dept: Dept
       *         // 角色集合
       *         roles: Array<Role> | null
       *         // 岗位集合
       *         jobs: Array<{
       *           // 主键
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否已删除
       *           isDeleted: boolean
       *           // 名称
       *           name: string | null
       *           // 编号
       *           code: string | null
       *           // 排序
       *           sort: number
       *           // 是否激活
       *           enabled: boolean
       *           // 用户列表
       *           users: Array<User> | null
       *         }> | null
       *         // 租户
       *         tenant: {
       *           // 主键
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否已删除
       *           isDeleted: boolean
       *           // 租户Id
       *           tenantId: number
       *           // 名称
       *           name: string | null
       *           // 描述
       *           description: string | null
       *           // 租户类型
       *           tenantType: 1 | 2
       *           // 库Id
       *           configId: string | null
       *           dbType:
       *             | 0
       *             | 1
       *             | 2
       *             | 3
       *             | 4
       *             | 5
       *             | 6
       *             | 7
       *             | 8
       *             | 9
       *             | 10
       *             | 11
       *             | 12
       *             | 13
       *             | 14
       *             | 15
       *             | 16
       *             | 17
       *             | 18
       *             | 19
       *             | 20
       *             | 21
       *             | 22
       *             | 23
       *             | 24
       *             | 25
       *             | 26
       *             | 27
       *             | 28
       *             | 29
       *             | 30
       *             | 31
       *             | 900
       *           // 数据库连接
       *           connectionString: string | null
       *           // 用户列表
       *           users: Array<User> | null
       *         }
       *       }> | null
       *       // 用户集合
       *       roles: Array<Role> | null
       *     }> | null
       *     // 用户列表
       *     users: Array<User> | null
       *     // 菜单集合
       *     apis: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 组
       *       group: string | null
       *       // 路径
       *       url: string | null
       *       // 版本
       *       version: number
       *       // 描述
       *       description: string | null
       *       // 请求方法
       *       method: string | null
       *       // 角色集合
       *       roles: Array<Role> | null
       *     }> | null
       *   }> | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_update<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateDeptParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Dept.put_update',
        Config
      >;
    };
    I18n: {
      /**
       * ---
       *
       * [POST] 新增
       *
       * **path:** /api/I18n/Add
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 创建者名称
       *   createBy: string | null
       *   // 创建时间
       *   createTime: string
       *   // 更新者名称
       *   updateBy: string | null
       *   // 最后更新时间
       *   updateTime: string | null
       *   // 是否已删除
       *   isDeleted: boolean
       *   // 键
       *   key: string | null
       *   // 中文
       *   zhCn: string | null
       *   // 英文
       *   enUs: string | null
       *   // 来源
       *   source: string | null
       *   // 访问次数
       *   count: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_add<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateI18nParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'I18n.post_add',
        Config
      >;
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/I18n/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = string[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: string[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'I18n.delete_delete',
        Config
      >;
      /**
       * ---
       *
       * [GET] 根据国际化
       *
       * **path:** /api/I18n/GetByLocale
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   locale: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Record<string, string>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_getbylocale<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: Record<string, string>;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            locale: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: Record<string, string>;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'I18n.get_getbylocale',
        Config
      >;
      /**
       * ---
       *
       * [GET] 分页
       *
       * **path:** /api/I18n/GetPage
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   StartIndex: number
       *   PageIndex: number
       *   PageSize: number
       *   Search: Record<string, Record<string, string> | null>
       *   SortList: Record<string, 1 | 2>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     pagerInfo: {
       *       totalRowCount: number
       *       pageSize: number
       *       startIndex: number
       *       pageIndex: number
       *       hasPrev: boolean
       *       hasNext: boolean
       *       isFirst: boolean
       *       isLast: boolean
       *       totalPageCount: number
       *     }
       *     data: Array<{
       *       // 主键
       *       id: string
       *       // 键
       *       key: string | null
       *       // 中文
       *       zhCn: string | null
       *       // 英文
       *       enUs: string | null
       *       // 来源
       *       source: string | null
       *       // 访问次数
       *       count: number
       *     }> | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_getpage<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: I18nDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            StartIndex: number;
            PageIndex: number;
            PageSize: number;
            Search: Record<string, Record<string, string> | null>;
            SortList: Record<string, OrderTypeEnum>;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: I18nDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'I18n.get_getpage',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 编辑
       *
       * **path:** /api/I18n/Update
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 创建者名称
       *   createBy: string | null
       *   // 创建时间
       *   createTime: string
       *   // 更新者名称
       *   updateBy: string | null
       *   // 最后更新时间
       *   updateTime: string | null
       *   // 是否已删除
       *   isDeleted: boolean
       *   // 键
       *   key: string | null
       *   // 中文
       *   zhCn: string | null
       *   // 英文
       *   enUs: string | null
       *   // 来源
       *   source: string | null
       *   // 访问次数
       *   count: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_update<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateI18nParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'I18n.put_update',
        Config
      >;
    };
    Job: {
      /**
       * ---
       *
       * [POST] 新增
       *
       * **path:** /api/Job/Add
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 创建者名称
       *   createBy: string | null
       *   // 创建时间
       *   createTime: string
       *   // 更新者名称
       *   updateBy: string | null
       *   // 最后更新时间
       *   updateTime: string | null
       *   // 是否已删除
       *   isDeleted: boolean
       *   // 名称
       *   name: string | null
       *   // 编号
       *   code: string | null
       *   // 排序
       *   sort: number
       *   // 是否激活
       *   enabled: boolean
       *   // 用户列表
       *   users: Array<{
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 用户名
       *     userName: string | null
       *     // 昵称
       *     nickName: string | null
       *     // 邮箱
       *     email: string | null
       *     // 是否内置管理员
       *     isAdmin: boolean
       *     // 是否激活
       *     enabled: boolean
       *     // 密码
       *     password: string | null
       *     // 部门
       *     deptId: string
       *     // 电话
       *     phone: string | null
       *     // 头像路径
       *     avatarPath: string | null
       *     // 最后修改密码时间
       *     passwordReSetTime: string | null
       *     // 性别
       *     gender: string | null
       *     // 租户ID
       *     tenantId: number
       *     // 部门
       *     dept: Dept
       *     // 角色集合
       *     roles: Array<Role> | null
       *     // 岗位集合
       *     jobs: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 名称
       *       name: string | null
       *       // 编号
       *       code: string | null
       *       // 排序
       *       sort: number
       *       // 是否激活
       *       enabled: boolean
       *       // 用户列表
       *       users: Array<User> | null
       *     }> | null
       *     // 租户
       *     tenant: {
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 租户Id
       *       tenantId: number
       *       // 名称
       *       name: string | null
       *       // 描述
       *       description: string | null
       *       // 租户类型
       *       tenantType: 1 | 2
       *       // 库Id
       *       configId: string | null
       *       dbType:
       *         | 0
       *         | 1
       *         | 2
       *         | 3
       *         | 4
       *         | 5
       *         | 6
       *         | 7
       *         | 8
       *         | 9
       *         | 10
       *         | 11
       *         | 12
       *         | 13
       *         | 14
       *         | 15
       *         | 16
       *         | 17
       *         | 18
       *         | 19
       *         | 20
       *         | 21
       *         | 22
       *         | 23
       *         | 24
       *         | 25
       *         | 26
       *         | 27
       *         | 28
       *         | 29
       *         | 30
       *         | 31
       *         | 900
       *       // 数据库连接
       *       connectionString: string | null
       *       // 用户列表
       *       users: Array<User> | null
       *     }
       *   }> | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_add<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateJobParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Job.post_add',
        Config
      >;
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/Job/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = string[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: string[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Job.delete_delete',
        Config
      >;
      /**
       * ---
       *
       * [GET] 详情
       *
       * **path:** /api/Job/GetInfo
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 详情
       *   // [required]
       *   data: {
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 名称
       *     name: string | null
       *     // 编号
       *     code: string | null
       *     // 排序
       *     sort: number
       *     // 是否激活
       *     enabled: boolean
       *     // 用户列表
       *     users: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 用户名
       *       userName: string | null
       *       // 昵称
       *       nickName: string | null
       *       // 邮箱
       *       email: string | null
       *       // 是否内置管理员
       *       isAdmin: boolean
       *       // 是否激活
       *       enabled: boolean
       *       // 密码
       *       password: string | null
       *       // 部门
       *       deptId: string
       *       // 电话
       *       phone: string | null
       *       // 头像路径
       *       avatarPath: string | null
       *       // 最后修改密码时间
       *       passwordReSetTime: string | null
       *       // 性别
       *       gender: string | null
       *       // 租户ID
       *       tenantId: number
       *       // 部门
       *       dept: Dept
       *       // 角色集合
       *       roles: Array<Role> | null
       *       // 岗位集合
       *       jobs: Array<{
       *         // 主键
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否已删除
       *         isDeleted: boolean
       *         // 名称
       *         name: string | null
       *         // 编号
       *         code: string | null
       *         // 排序
       *         sort: number
       *         // 是否激活
       *         enabled: boolean
       *         // 用户列表
       *         users: Array<User> | null
       *       }> | null
       *       // 租户
       *       tenant: {
       *         // 主键
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否已删除
       *         isDeleted: boolean
       *         // 租户Id
       *         tenantId: number
       *         // 名称
       *         name: string | null
       *         // 描述
       *         description: string | null
       *         // 租户类型
       *         tenantType: 1 | 2
       *         // 库Id
       *         configId: string | null
       *         dbType:
       *           | 0
       *           | 1
       *           | 2
       *           | 3
       *           | 4
       *           | 5
       *           | 6
       *           | 7
       *           | 8
       *           | 9
       *           | 10
       *           | 11
       *           | 12
       *           | 13
       *           | 14
       *           | 15
       *           | 16
       *           | 17
       *           | 18
       *           | 19
       *           | 20
       *           | 21
       *           | 22
       *           | 23
       *           | 24
       *           | 25
       *           | 26
       *           | 27
       *           | 28
       *           | 29
       *           | 30
       *           | 31
       *           | 900
       *         // 数据库连接
       *         connectionString: string | null
       *         // 用户列表
       *         users: Array<User> | null
       *       }
       *     }> | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_getinfo<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 详情
           * [required]
           */
          data: JobInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 详情
           * [required]
           */
          data: JobInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Job.get_getinfo',
        Config
      >;
      /**
       * ---
       *
       * [GET] 分页
       *
       * **path:** /api/Job/GetPage
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   StartIndex: number
       *   PageIndex: number
       *   PageSize: number
       *   Search: Record<string, Record<string, string> | null>
       *   SortList: Record<string, 1 | 2>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     pagerInfo: {
       *       totalRowCount: number
       *       pageSize: number
       *       startIndex: number
       *       pageIndex: number
       *       hasPrev: boolean
       *       hasNext: boolean
       *       isFirst: boolean
       *       isLast: boolean
       *       totalPageCount: number
       *     }
       *     data: Array<{
       *       // 主键
       *       id: string
       *       // 名称
       *       name: string | null
       *       // 编号
       *       code: string | null
       *       // 排序
       *       sort: number
       *       // 是否激活
       *       enabled: boolean
       *     }> | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_getpage<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: JobDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            StartIndex: number;
            PageIndex: number;
            PageSize: number;
            Search: Record<string, Record<string, string> | null>;
            SortList: Record<string, OrderTypeEnum>;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: JobDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Job.get_getpage',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 编辑
       *
       * **path:** /api/Job/Update
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 创建者名称
       *   createBy: string | null
       *   // 创建时间
       *   createTime: string
       *   // 更新者名称
       *   updateBy: string | null
       *   // 最后更新时间
       *   updateTime: string | null
       *   // 是否已删除
       *   isDeleted: boolean
       *   // 名称
       *   name: string | null
       *   // 编号
       *   code: string | null
       *   // 排序
       *   sort: number
       *   // 是否激活
       *   enabled: boolean
       *   // 用户列表
       *   users: Array<{
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 用户名
       *     userName: string | null
       *     // 昵称
       *     nickName: string | null
       *     // 邮箱
       *     email: string | null
       *     // 是否内置管理员
       *     isAdmin: boolean
       *     // 是否激活
       *     enabled: boolean
       *     // 密码
       *     password: string | null
       *     // 部门
       *     deptId: string
       *     // 电话
       *     phone: string | null
       *     // 头像路径
       *     avatarPath: string | null
       *     // 最后修改密码时间
       *     passwordReSetTime: string | null
       *     // 性别
       *     gender: string | null
       *     // 租户ID
       *     tenantId: number
       *     // 部门
       *     dept: Dept
       *     // 角色集合
       *     roles: Array<Role> | null
       *     // 岗位集合
       *     jobs: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 名称
       *       name: string | null
       *       // 编号
       *       code: string | null
       *       // 排序
       *       sort: number
       *       // 是否激活
       *       enabled: boolean
       *       // 用户列表
       *       users: Array<User> | null
       *     }> | null
       *     // 租户
       *     tenant: {
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 租户Id
       *       tenantId: number
       *       // 名称
       *       name: string | null
       *       // 描述
       *       description: string | null
       *       // 租户类型
       *       tenantType: 1 | 2
       *       // 库Id
       *       configId: string | null
       *       dbType:
       *         | 0
       *         | 1
       *         | 2
       *         | 3
       *         | 4
       *         | 5
       *         | 6
       *         | 7
       *         | 8
       *         | 9
       *         | 10
       *         | 11
       *         | 12
       *         | 13
       *         | 14
       *         | 15
       *         | 16
       *         | 17
       *         | 18
       *         | 19
       *         | 20
       *         | 21
       *         | 22
       *         | 23
       *         | 24
       *         | 25
       *         | 26
       *         | 27
       *         | 28
       *         | 29
       *         | 30
       *         | 31
       *         | 900
       *       // 数据库连接
       *       connectionString: string | null
       *       // 用户列表
       *       users: Array<User> | null
       *     }
       *   }> | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_update<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateJobParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Job.put_update',
        Config
      >;
    };
    Login: {
      /**
       * ---
       *
       * [GET] 获取验证码
       *
       * **path:** /api/Login/Captcha
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 验证码
       *   // [required]
       *   data: {
       *     // 图片base64
       *     img: string | null
       *     // 验证码ID
       *     captchaId: string | null
       *     // 是否显示验证码
       *     showCaptcha: boolean
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_captcha<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 验证码
           * [required]
           */
          data: CaptchaVo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 验证码
           * [required]
           */
          data: CaptchaVo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Login.get_captcha',
        Config
      >;
      /**
       * ---
       *
       * [GET]  (Auth policies: Permission)
       *
       * **path:** /api/Login/GetInfo
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // JWT令牌用户
       *   // [required]
       *   data: {
       *     // 详情
       *     user: {
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否删除
       *       isDeleted: boolean
       *       // 用户名
       *       userName: string | null
       *       // 昵称
       *       nickName: string | null
       *       // 邮箱
       *       email: string | null
       *       // 内置管理员
       *       isAdmin: boolean
       *       // 是否激活
       *       enabled: boolean
       *       // 密码
       *       password: string | null
       *       // 部门
       *       deptId: string
       *       // 电话
       *       phone: string | null
       *       // 头像文件路径
       *       avatarPath: string | null
       *       // 性别
       *       gender: string | null
       *       // 最后修改密码时间
       *       passwordReSetTime: string | null
       *       // 角色列表
       *       roles: Array<{
       *         // 主键
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否删除
       *         isDeleted: boolean
       *         // 名称
       *         name: string | null
       *         // 等级
       *         level: number
       *         // 描述
       *         description: string | null
       *         dataScopeType: 0 | 1 | 2 | 3 | 4 | 5
       *         // 权限标识
       *         permission: string | null
       *         // 菜单列表
       *         menus: Array<{
       *           // 主键
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否已删除
       *           isDeleted: boolean
       *           // 权限标识符
       *           permission: string | null
       *           // 菜单名
       *           name: string | null
       *           // 路径
       *           pathParam: string | null
       *           layout: 1 | 2
       *           // 重定向
       *           redirect: string | null
       *           // 组件
       *           component: string | null
       *           // 父级
       *           parentId: string | null
       *           menuType: 1 | 2 | 3 | 4
       *           iconType: 1 | 2
       *           // 状态
       *           status: boolean
       *           // 路由标题(可用来作document.title或者菜单的名称)
       *           title: string | null
       *           // 缓存页面
       *           keepAlive: boolean
       *           // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *           constant: boolean
       *           // 菜单和面包屑对应的图标
       *           icon: string | null
       *           // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *           localIcon: string | null
       *           // 菜单和面包屑对应的图标的字体大小
       *           iconFontSize: number
       *           // 路由顺序，可用于菜单的排序
       *           order: number
       *           // 外链链接
       *           href: string | null
       *           // 是否在菜单中隐藏路线
       *           hideInMenu: boolean
       *           // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *           activeMenu: string | null
       *           // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *           multiTab: boolean
       *           // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *           fixedIndexInTab: number
       *           props: boolean
       *           // 子菜单集合
       *           children: Array<{
       *             // 主键
       *             id: string
       *             // 创建者名称
       *             createBy: string | null
       *             // 创建时间
       *             createTime: string
       *             // 更新者名称
       *             updateBy: string | null
       *             // 最后更新时间
       *             updateTime: string | null
       *             // 是否已删除
       *             isDeleted: boolean
       *             // 权限标识符
       *             permission: string | null
       *             // 菜单名
       *             name: string | null
       *             // 路径
       *             pathParam: string | null
       *             layout: 1 | 2
       *             // 重定向
       *             redirect: string | null
       *             // 组件
       *             component: string | null
       *             // 父级
       *             parentId: string | null
       *             menuType: 1 | 2 | 3 | 4
       *             iconType: 1 | 2
       *             // 状态
       *             status: boolean
       *             // 路由标题(可用来作document.title或者菜单的名称)
       *             title: string | null
       *             // 缓存页面
       *             keepAlive: boolean
       *             // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *             constant: boolean
       *             // 菜单和面包屑对应的图标
       *             icon: string | null
       *             // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *             localIcon: string | null
       *             // 菜单和面包屑对应的图标的字体大小
       *             iconFontSize: number
       *             // 路由顺序，可用于菜单的排序
       *             order: number
       *             // 外链链接
       *             href: string | null
       *             // 是否在菜单中隐藏路线
       *             hideInMenu: boolean
       *             // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *             activeMenu: string | null
       *             // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *             multiTab: boolean
       *             // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *             fixedIndexInTab: number
       *             props: boolean
       *             // 子菜单集合
       *             children: Array<Menu> | null
       *             // 菜单集合
       *             roles: Array<Role> | null
       *           }> | null
       *           // 菜单集合
       *           roles: Array<{
       *             // 主键
       *             id: string
       *             // 创建者名称
       *             createBy: string | null
       *             // 创建时间
       *             createTime: string
       *             // 更新者名称
       *             updateBy: string | null
       *             // 最后更新时间
       *             updateTime: string | null
       *             // 是否已删除
       *             isDeleted: boolean
       *             // 角色名称
       *             name: string | null
       *             // 角色等级
       *             level: number
       *             // 描述
       *             description: string | null
       *             dataScopeType: 0 | 1 | 2 | 3 | 4 | 5
       *             // 角色代码
       *             permission: string | null
       *             // 菜单集合
       *             menus: Array<{
       *               // 主键
       *               id: string
       *               // 创建者名称
       *               createBy: string | null
       *               // 创建时间
       *               createTime: string
       *               // 更新者名称
       *               updateBy: string | null
       *               // 最后更新时间
       *               updateTime: string | null
       *               // 是否已删除
       *               isDeleted: boolean
       *               // 权限标识符
       *               permission: string | null
       *               // 菜单名
       *               name: string | null
       *               // 路径
       *               pathParam: string | null
       *               layout: 1 | 2
       *               // 重定向
       *               redirect: string | null
       *               // 组件
       *               component: string | null
       *               // 父级
       *               parentId: string | null
       *               menuType: 1 | 2 | 3 | 4
       *               iconType: 1 | 2
       *               // 状态
       *               status: boolean
       *               // 路由标题(可用来作document.title或者菜单的名称)
       *               title: string | null
       *               // 缓存页面
       *               keepAlive: boolean
       *               // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *               constant: boolean
       *               // 菜单和面包屑对应的图标
       *               icon: string | null
       *               // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *               localIcon: string | null
       *               // 菜单和面包屑对应的图标的字体大小
       *               iconFontSize: number
       *               // 路由顺序，可用于菜单的排序
       *               order: number
       *               // 外链链接
       *               href: string | null
       *               // 是否在菜单中隐藏路线
       *               hideInMenu: boolean
       *               // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *               activeMenu: string | null
       *               // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *               multiTab: boolean
       *               // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *               fixedIndexInTab: number
       *               props: boolean
       *               // 子菜单集合
       *               children: Array<Menu> | null
       *               // 菜单集合
       *               roles: Array<Role> | null
       *             }> | null
       *             // 部门集合
       *             depts: Array<{
       *               // 主键
       *               id: string
       *               // 创建者名称
       *               createBy: string | null
       *               // 创建时间
       *               createTime: string
       *               // 更新者名称
       *               updateBy: string | null
       *               // 最后更新时间
       *               updateTime: string | null
       *               // 是否已删除
       *               isDeleted: boolean
       *               // 部门名称
       *               name: string | null
       *               // 父级部门ID
       *               parentId: string
       *               // 排序
       *               sort: number
       *               // 是否启用
       *               enabled: boolean
       *               // 子节点个数
       *               subCount: number
       *               // 用户列表
       *               users: Array<{
       *                 // 主键
       *                 id: string
       *                 // 创建者名称
       *                 createBy: string | null
       *                 // 创建时间
       *                 createTime: string
       *                 // 更新者名称
       *                 updateBy: string | null
       *                 // 最后更新时间
       *                 updateTime: string | null
       *                 // 是否已删除
       *                 isDeleted: boolean
       *                 // 用户名
       *                 userName: string | null
       *                 // 昵称
       *                 nickName: string | null
       *                 // 邮箱
       *                 email: string | null
       *                 // 是否内置管理员
       *                 isAdmin: boolean
       *                 // 是否激活
       *                 enabled: boolean
       *                 // 密码
       *                 password: string | null
       *                 // 部门
       *                 deptId: string
       *                 // 电话
       *                 phone: string | null
       *                 // 头像路径
       *                 avatarPath: string | null
       *                 // 最后修改密码时间
       *                 passwordReSetTime: string | null
       *                 // 性别
       *                 gender: string | null
       *                 // 租户ID
       *                 tenantId: number
       *                 // 部门
       *                 dept: Dept
       *                 // 角色集合
       *                 roles: Array<Role> | null
       *                 // 岗位集合
       *                 jobs: Array<{
       *                   // 主键
       *                   id: string
       *                   // 创建者名称
       *                   createBy: string | null
       *                   // 创建时间
       *                   createTime: string
       *                   // 更新者名称
       *                   updateBy: string | null
       *                   // 最后更新时间
       *                   updateTime: string | null
       *                   // 是否已删除
       *                   isDeleted: boolean
       *                   // 名称
       *                   name: string | null
       *                   // 编号
       *                   code: string | null
       *                   // 排序
       *                   sort: number
       *                   // 是否激活
       *                   enabled: boolean
       *                   // 用户列表
       *                   users: Array<User> | null
       *                 }> | null
       *                 // 租户
       *                 tenant: {
       *                   // 主键
       *                   id: string
       *                   // 创建者名称
       *                   createBy: string | null
       *                   // 创建时间
       *                   createTime: string
       *                   // 更新者名称
       *                   updateBy: string | null
       *                   // 最后更新时间
       *                   updateTime: string | null
       *                   // 是否已删除
       *                   isDeleted: boolean
       *                   // 租户Id
       *                   tenantId: number
       *                   // 名称
       *                   name: string | null
       *                   // 描述
       *                   description: string | null
       *                   // 租户类型
       *                   tenantType: 1 | 2
       *                   // 库Id
       *                   configId: string | null
       *                   dbType:
       *                     | 0
       *                     | 1
       *                     | 2
       *                     | 3
       *                     | 4
       *                     | 5
       *                     | 6
       *                     | 7
       *                     | 8
       *                     | 9
       *                     | 10
       *                     | 11
       *                     | 12
       *                     | 13
       *                     | 14
       *                     | 15
       *                     | 16
       *                     | 17
       *                     | 18
       *                     | 19
       *                     | 20
       *                     | 21
       *                     | 22
       *                     | 23
       *                     | 24
       *                     | 25
       *                     | 26
       *                     | 27
       *                     | 28
       *                     | 29
       *                     | 30
       *                     | 31
       *                     | 900
       *                   // 数据库连接
       *                   connectionString: string | null
       *                   // 用户列表
       *                   users: Array<User> | null
       *                 }
       *               }> | null
       *               // 用户集合
       *               roles: Array<Role> | null
       *             }> | null
       *             // 用户列表
       *             users: Array<User> | null
       *             // 菜单集合
       *             apis: Array<{
       *               // 主键
       *               id: string
       *               // 创建者名称
       *               createBy: string | null
       *               // 创建时间
       *               createTime: string
       *               // 更新者名称
       *               updateBy: string | null
       *               // 最后更新时间
       *               updateTime: string | null
       *               // 是否已删除
       *               isDeleted: boolean
       *               // 组
       *               group: string | null
       *               // 路径
       *               url: string | null
       *               // 版本
       *               version: number
       *               // 描述
       *               description: string | null
       *               // 请求方法
       *               method: string | null
       *               // 角色集合
       *               roles: Array<Role> | null
       *             }> | null
       *           }> | null
       *           buttons: Array<{
       *             id: string
       *             // 按钮编码
       *             code: string | null
       *             // 描述
       *             desc: string | null
       *             // 父级Id
       *             parentId: string | null
       *             // 状态
       *             status: boolean
       *           }> | null
       *           querys: Array<{
       *             id: string
       *             // 父级Id
       *             parentId: string | null
       *             key: string | null
       *             value: string | null
       *             // 状态
       *             status: boolean
       *           }> | null
       *         }> | null
       *         // 部门列表
       *         depts: Array<{
       *           // ID
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否删除
       *           isDeleted: boolean
       *           // 名称
       *           name: string | null
       *         }> | null
       *         // 菜单列表
       *         apis: Array<{
       *           // 主键
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否已删除
       *           isDeleted: boolean
       *           // 组
       *           group: string | null
       *           // 路径
       *           url: string | null
       *           // 版本
       *           version: number
       *           // 描述
       *           description: string | null
       *           // 请求方法
       *           method: string | null
       *           // 角色集合
       *           roles: Array<Role> | null
       *         }> | null
       *       }> | null
       *       dept: DeptInfo
       *       // 租户ID
       *       tenantId: number
       *     }
       *     // 角色权限
       *     roles: string[] | null
       *     // 数据权限
       *     dataScopes: string[] | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_getinfo<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * JWT令牌用户
           * [required]
           */
          data: JwtUserInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * JWT令牌用户
           * [required]
           */
          data: JwtUserInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Login.get_getinfo',
        Config
      >;
      /**
       * ---
       *
       * [POST] 用户登录
       *
       * **path:** /api/Login/Login
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 用户名
       *   // [required]
       *   userName: string
       *   // 密码
       *   // [required]
       *   password: string
       *   // 验证码
       *   captcha: string | null
       *   // 验证码ID
       *   captchaId: string | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     // 授权token
       *     accessToken: string | null
       *     // 过期时间
       *     expires: number
       *     // 类型
       *     tokenType: string | null
       *     // 刷新token
       *     refreshToken: string | null
       *     // 允许token时间内
       *     refreshTokenExpires: number
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_login<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: LoginToken;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: LoginParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: LoginToken;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Login.post_login',
        Config
      >;
      /**
       * ---
       *
       * [POST] 刷新Token
       *
       * **path:** /api/Login/RefreshToken
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   token: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     // 授权token
       *     accessToken: string | null
       *     // 过期时间
       *     expires: number
       *     // 类型
       *     tokenType: string | null
       *     // 刷新token
       *     refreshToken: string | null
       *     // 允许token时间内
       *     refreshTokenExpires: number
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_refreshtoken<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: LoginToken;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            token: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: LoginToken;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Login.post_refreshtoken',
        Config
      >;
    };
    Menu: {
      /**
       * ---
       *
       * [POST] 添加
       *
       * **path:** /api/Menu/Add
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 创建者名称
       *   createBy: string | null
       *   // 创建时间
       *   createTime: string
       *   // 更新者名称
       *   updateBy: string | null
       *   // 最后更新时间
       *   updateTime: string | null
       *   // 是否已删除
       *   isDeleted: boolean
       *   // 权限标识符
       *   permission: string | null
       *   // 菜单名
       *   name: string | null
       *   // 路径
       *   pathParam: string | null
       *   layout: 1 | 2
       *   // 重定向
       *   redirect: string | null
       *   // 组件
       *   component: string | null
       *   // 父级
       *   parentId: string | null
       *   menuType: 1 | 2 | 3 | 4
       *   iconType: 1 | 2
       *   // 状态
       *   status: boolean
       *   // 路由标题(可用来作document.title或者菜单的名称)
       *   title: string | null
       *   // 缓存页面
       *   keepAlive: boolean
       *   // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *   constant: boolean
       *   // 菜单和面包屑对应的图标
       *   icon: string | null
       *   // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *   localIcon: string | null
       *   // 菜单和面包屑对应的图标的字体大小
       *   iconFontSize: number
       *   // 路由顺序，可用于菜单的排序
       *   order: number
       *   // 外链链接
       *   href: string | null
       *   // 是否在菜单中隐藏路线
       *   hideInMenu: boolean
       *   // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *   activeMenu: string | null
       *   // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *   multiTab: boolean
       *   // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *   fixedIndexInTab: number
       *   props: boolean
       *   // 子菜单集合
       *   children: Array<{
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 权限标识符
       *     permission: string | null
       *     // 菜单名
       *     name: string | null
       *     // 路径
       *     pathParam: string | null
       *     layout: 1 | 2
       *     // 重定向
       *     redirect: string | null
       *     // 组件
       *     component: string | null
       *     // 父级
       *     parentId: string | null
       *     menuType: 1 | 2 | 3 | 4
       *     iconType: 1 | 2
       *     // 状态
       *     status: boolean
       *     // 路由标题(可用来作document.title或者菜单的名称)
       *     title: string | null
       *     // 缓存页面
       *     keepAlive: boolean
       *     // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *     constant: boolean
       *     // 菜单和面包屑对应的图标
       *     icon: string | null
       *     // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *     localIcon: string | null
       *     // 菜单和面包屑对应的图标的字体大小
       *     iconFontSize: number
       *     // 路由顺序，可用于菜单的排序
       *     order: number
       *     // 外链链接
       *     href: string | null
       *     // 是否在菜单中隐藏路线
       *     hideInMenu: boolean
       *     // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *     activeMenu: string | null
       *     // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *     multiTab: boolean
       *     // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *     fixedIndexInTab: number
       *     props: boolean
       *     // 子菜单集合
       *     children: Array<Menu> | null
       *     // 菜单集合
       *     roles: Array<Role> | null
       *   }> | null
       *   // 菜单集合
       *   roles: Array<{
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 角色名称
       *     name: string | null
       *     // 角色等级
       *     level: number
       *     // 描述
       *     description: string | null
       *     dataScopeType: 0 | 1 | 2 | 3 | 4 | 5
       *     // 角色代码
       *     permission: string | null
       *     // 菜单集合
       *     menus: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 权限标识符
       *       permission: string | null
       *       // 菜单名
       *       name: string | null
       *       // 路径
       *       pathParam: string | null
       *       layout: 1 | 2
       *       // 重定向
       *       redirect: string | null
       *       // 组件
       *       component: string | null
       *       // 父级
       *       parentId: string | null
       *       menuType: 1 | 2 | 3 | 4
       *       iconType: 1 | 2
       *       // 状态
       *       status: boolean
       *       // 路由标题(可用来作document.title或者菜单的名称)
       *       title: string | null
       *       // 缓存页面
       *       keepAlive: boolean
       *       // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *       constant: boolean
       *       // 菜单和面包屑对应的图标
       *       icon: string | null
       *       // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *       localIcon: string | null
       *       // 菜单和面包屑对应的图标的字体大小
       *       iconFontSize: number
       *       // 路由顺序，可用于菜单的排序
       *       order: number
       *       // 外链链接
       *       href: string | null
       *       // 是否在菜单中隐藏路线
       *       hideInMenu: boolean
       *       // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *       activeMenu: string | null
       *       // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *       multiTab: boolean
       *       // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *       fixedIndexInTab: number
       *       props: boolean
       *       // 子菜单集合
       *       children: Array<Menu> | null
       *       // 菜单集合
       *       roles: Array<Role> | null
       *     }> | null
       *     // 部门集合
       *     depts: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 部门名称
       *       name: string | null
       *       // 父级部门ID
       *       parentId: string
       *       // 排序
       *       sort: number
       *       // 是否启用
       *       enabled: boolean
       *       // 子节点个数
       *       subCount: number
       *       // 用户列表
       *       users: Array<{
       *         // 主键
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否已删除
       *         isDeleted: boolean
       *         // 用户名
       *         userName: string | null
       *         // 昵称
       *         nickName: string | null
       *         // 邮箱
       *         email: string | null
       *         // 是否内置管理员
       *         isAdmin: boolean
       *         // 是否激活
       *         enabled: boolean
       *         // 密码
       *         password: string | null
       *         // 部门
       *         deptId: string
       *         // 电话
       *         phone: string | null
       *         // 头像路径
       *         avatarPath: string | null
       *         // 最后修改密码时间
       *         passwordReSetTime: string | null
       *         // 性别
       *         gender: string | null
       *         // 租户ID
       *         tenantId: number
       *         // 部门
       *         dept: Dept
       *         // 角色集合
       *         roles: Array<Role> | null
       *         // 岗位集合
       *         jobs: Array<{
       *           // 主键
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否已删除
       *           isDeleted: boolean
       *           // 名称
       *           name: string | null
       *           // 编号
       *           code: string | null
       *           // 排序
       *           sort: number
       *           // 是否激活
       *           enabled: boolean
       *           // 用户列表
       *           users: Array<User> | null
       *         }> | null
       *         // 租户
       *         tenant: {
       *           // 主键
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否已删除
       *           isDeleted: boolean
       *           // 租户Id
       *           tenantId: number
       *           // 名称
       *           name: string | null
       *           // 描述
       *           description: string | null
       *           // 租户类型
       *           tenantType: 1 | 2
       *           // 库Id
       *           configId: string | null
       *           dbType:
       *             | 0
       *             | 1
       *             | 2
       *             | 3
       *             | 4
       *             | 5
       *             | 6
       *             | 7
       *             | 8
       *             | 9
       *             | 10
       *             | 11
       *             | 12
       *             | 13
       *             | 14
       *             | 15
       *             | 16
       *             | 17
       *             | 18
       *             | 19
       *             | 20
       *             | 21
       *             | 22
       *             | 23
       *             | 24
       *             | 25
       *             | 26
       *             | 27
       *             | 28
       *             | 29
       *             | 30
       *             | 31
       *             | 900
       *           // 数据库连接
       *           connectionString: string | null
       *           // 用户列表
       *           users: Array<User> | null
       *         }
       *       }> | null
       *       // 用户集合
       *       roles: Array<Role> | null
       *     }> | null
       *     // 用户列表
       *     users: Array<User> | null
       *     // 菜单集合
       *     apis: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 组
       *       group: string | null
       *       // 路径
       *       url: string | null
       *       // 版本
       *       version: number
       *       // 描述
       *       description: string | null
       *       // 请求方法
       *       method: string | null
       *       // 角色集合
       *       roles: Array<Role> | null
       *     }> | null
       *   }> | null
       *   buttons: Array<{
       *     id: string
       *     // 按钮编码
       *     code: string | null
       *     // 描述
       *     desc: string | null
       *     // 父级Id
       *     parentId: string | null
       *     // 状态
       *     status: boolean
       *   }> | null
       *   querys: Array<{
       *     id: string
       *     // 父级Id
       *     parentId: string | null
       *     key: string | null
       *     value: string | null
       *     // 状态
       *     status: boolean
       *   }> | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_add<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateMenuParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.post_add',
        Config
      >;
      /**
       * ---
       *
       * [GET] 常量路由
       *
       * **path:** /api/Menu/ConstantRoutes
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否删除
       *     isDeleted: boolean
       *     // 菜单名
       *     name: string | null
       *     // 路径
       *     path: string | null
       *     // 重定向
       *     redirect: string | null
       *     // 组件
       *     component: string | null
       *     // 父级
       *     parentId: string | null
       *     type: 1 | 2 | 3 | 4
       *     // 状态
       *     status: boolean
       *     meta: {
       *       // 路由标题(可用来作document.title或者菜单的名称)
       *       title: string | null
       *       // 权限标识
       *       roles: string[] | null
       *       // 缓存页面
       *       keepAlive: boolean
       *       // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *       constant: boolean
       *       // 菜单和面包屑对应的图标
       *       icon: string | null
       *       // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *       localIcon: string | null
       *       // 菜单和面包屑对应的图标的字体大小
       *       iconFontSize: number | null
       *       // 路由顺序，可用于菜单的排序
       *       order: number
       *       // 外链链接
       *       href: string | null
       *       // 是否在菜单中隐藏路线
       *       hideInMenu: boolean
       *       // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *       activeMenu: string | null
       *       // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *       multiTab: boolean
       *       // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *       fixedIndexInTab: number | null
       *       // 跳转参数
       *       query: Array<{
       *         id: string
       *         // 父级Id
       *         parentId: string | null
       *         key: string | null
       *         value: string | null
       *         // 状态
       *         status: boolean
       *       }> | null
       *     }
       *     props: boolean
       *     // 子节点
       *     children: Array<RouteDTO> | null
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_constantroutes<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RouteDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RouteDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_constantroutes',
        Config
      >;
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/Menu/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = string[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: string[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.delete_delete',
        Config
      >;
      /**
       * ---
       *
       * [GET] 详情
       *
       * **path:** /api/Menu/GetInfo
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 菜单 详情
       *   // [required]
       *   data: {
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 权限标识符
       *     permission: string | null
       *     // 菜单名
       *     name: string | null
       *     // 路径
       *     pathParam: string | null
       *     layout: 1 | 2
       *     // 重定向
       *     redirect: string | null
       *     // 组件
       *     component: string | null
       *     // 父级
       *     parentId: string | null
       *     menuType: 1 | 2 | 3 | 4
       *     iconType: 1 | 2
       *     // 状态
       *     status: boolean
       *     // 路由标题(可用来作document.title或者菜单的名称)
       *     title: string | null
       *     // 缓存页面
       *     keepAlive: boolean
       *     // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *     constant: boolean
       *     // 菜单和面包屑对应的图标
       *     icon: string | null
       *     // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *     localIcon: string | null
       *     // 菜单和面包屑对应的图标的字体大小
       *     iconFontSize: number
       *     // 路由顺序，可用于菜单的排序
       *     order: number
       *     // 外链链接
       *     href: string | null
       *     // 是否在菜单中隐藏路线
       *     hideInMenu: boolean
       *     // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *     activeMenu: string | null
       *     // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *     multiTab: boolean
       *     // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *     fixedIndexInTab: number
       *     props: boolean
       *     // 子菜单集合
       *     children: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 权限标识符
       *       permission: string | null
       *       // 菜单名
       *       name: string | null
       *       // 路径
       *       pathParam: string | null
       *       layout: 1 | 2
       *       // 重定向
       *       redirect: string | null
       *       // 组件
       *       component: string | null
       *       // 父级
       *       parentId: string | null
       *       menuType: 1 | 2 | 3 | 4
       *       iconType: 1 | 2
       *       // 状态
       *       status: boolean
       *       // 路由标题(可用来作document.title或者菜单的名称)
       *       title: string | null
       *       // 缓存页面
       *       keepAlive: boolean
       *       // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *       constant: boolean
       *       // 菜单和面包屑对应的图标
       *       icon: string | null
       *       // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *       localIcon: string | null
       *       // 菜单和面包屑对应的图标的字体大小
       *       iconFontSize: number
       *       // 路由顺序，可用于菜单的排序
       *       order: number
       *       // 外链链接
       *       href: string | null
       *       // 是否在菜单中隐藏路线
       *       hideInMenu: boolean
       *       // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *       activeMenu: string | null
       *       // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *       multiTab: boolean
       *       // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *       fixedIndexInTab: number
       *       props: boolean
       *       // 子菜单集合
       *       children: Array<Menu> | null
       *       // 菜单集合
       *       roles: Array<Role> | null
       *     }> | null
       *     // 菜单集合
       *     roles: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 角色名称
       *       name: string | null
       *       // 角色等级
       *       level: number
       *       // 描述
       *       description: string | null
       *       dataScopeType: 0 | 1 | 2 | 3 | 4 | 5
       *       // 角色代码
       *       permission: string | null
       *       // 菜单集合
       *       menus: Array<{
       *         // 主键
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否已删除
       *         isDeleted: boolean
       *         // 权限标识符
       *         permission: string | null
       *         // 菜单名
       *         name: string | null
       *         // 路径
       *         pathParam: string | null
       *         layout: 1 | 2
       *         // 重定向
       *         redirect: string | null
       *         // 组件
       *         component: string | null
       *         // 父级
       *         parentId: string | null
       *         menuType: 1 | 2 | 3 | 4
       *         iconType: 1 | 2
       *         // 状态
       *         status: boolean
       *         // 路由标题(可用来作document.title或者菜单的名称)
       *         title: string | null
       *         // 缓存页面
       *         keepAlive: boolean
       *         // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *         constant: boolean
       *         // 菜单和面包屑对应的图标
       *         icon: string | null
       *         // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *         localIcon: string | null
       *         // 菜单和面包屑对应的图标的字体大小
       *         iconFontSize: number
       *         // 路由顺序，可用于菜单的排序
       *         order: number
       *         // 外链链接
       *         href: string | null
       *         // 是否在菜单中隐藏路线
       *         hideInMenu: boolean
       *         // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *         activeMenu: string | null
       *         // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *         multiTab: boolean
       *         // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *         fixedIndexInTab: number
       *         props: boolean
       *         // 子菜单集合
       *         children: Array<Menu> | null
       *         // 菜单集合
       *         roles: Array<Role> | null
       *       }> | null
       *       // 部门集合
       *       depts: Array<{
       *         // 主键
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否已删除
       *         isDeleted: boolean
       *         // 部门名称
       *         name: string | null
       *         // 父级部门ID
       *         parentId: string
       *         // 排序
       *         sort: number
       *         // 是否启用
       *         enabled: boolean
       *         // 子节点个数
       *         subCount: number
       *         // 用户列表
       *         users: Array<{
       *           // 主键
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否已删除
       *           isDeleted: boolean
       *           // 用户名
       *           userName: string | null
       *           // 昵称
       *           nickName: string | null
       *           // 邮箱
       *           email: string | null
       *           // 是否内置管理员
       *           isAdmin: boolean
       *           // 是否激活
       *           enabled: boolean
       *           // 密码
       *           password: string | null
       *           // 部门
       *           deptId: string
       *           // 电话
       *           phone: string | null
       *           // 头像路径
       *           avatarPath: string | null
       *           // 最后修改密码时间
       *           passwordReSetTime: string | null
       *           // 性别
       *           gender: string | null
       *           // 租户ID
       *           tenantId: number
       *           // 部门
       *           dept: Dept
       *           // 角色集合
       *           roles: Array<Role> | null
       *           // 岗位集合
       *           jobs: Array<{
       *             // 主键
       *             id: string
       *             // 创建者名称
       *             createBy: string | null
       *             // 创建时间
       *             createTime: string
       *             // 更新者名称
       *             updateBy: string | null
       *             // 最后更新时间
       *             updateTime: string | null
       *             // 是否已删除
       *             isDeleted: boolean
       *             // 名称
       *             name: string | null
       *             // 编号
       *             code: string | null
       *             // 排序
       *             sort: number
       *             // 是否激活
       *             enabled: boolean
       *             // 用户列表
       *             users: Array<User> | null
       *           }> | null
       *           // 租户
       *           tenant: {
       *             // 主键
       *             id: string
       *             // 创建者名称
       *             createBy: string | null
       *             // 创建时间
       *             createTime: string
       *             // 更新者名称
       *             updateBy: string | null
       *             // 最后更新时间
       *             updateTime: string | null
       *             // 是否已删除
       *             isDeleted: boolean
       *             // 租户Id
       *             tenantId: number
       *             // 名称
       *             name: string | null
       *             // 描述
       *             description: string | null
       *             // 租户类型
       *             tenantType: 1 | 2
       *             // 库Id
       *             configId: string | null
       *             dbType:
       *               | 0
       *               | 1
       *               | 2
       *               | 3
       *               | 4
       *               | 5
       *               | 6
       *               | 7
       *               | 8
       *               | 9
       *               | 10
       *               | 11
       *               | 12
       *               | 13
       *               | 14
       *               | 15
       *               | 16
       *               | 17
       *               | 18
       *               | 19
       *               | 20
       *               | 21
       *               | 22
       *               | 23
       *               | 24
       *               | 25
       *               | 26
       *               | 27
       *               | 28
       *               | 29
       *               | 30
       *               | 31
       *               | 900
       *             // 数据库连接
       *             connectionString: string | null
       *             // 用户列表
       *             users: Array<User> | null
       *           }
       *         }> | null
       *         // 用户集合
       *         roles: Array<Role> | null
       *       }> | null
       *       // 用户列表
       *       users: Array<User> | null
       *       // 菜单集合
       *       apis: Array<{
       *         // 主键
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否已删除
       *         isDeleted: boolean
       *         // 组
       *         group: string | null
       *         // 路径
       *         url: string | null
       *         // 版本
       *         version: number
       *         // 描述
       *         description: string | null
       *         // 请求方法
       *         method: string | null
       *         // 角色集合
       *         roles: Array<Role> | null
       *       }> | null
       *     }> | null
       *     buttons: Array<{
       *       id: string
       *       // 按钮编码
       *       code: string | null
       *       // 描述
       *       desc: string | null
       *       // 父级Id
       *       parentId: string | null
       *       // 状态
       *       status: boolean
       *     }> | null
       *     querys: Array<{
       *       id: string
       *       // 父级Id
       *       parentId: string | null
       *       key: string | null
       *       value: string | null
       *       // 状态
       *       status: boolean
       *     }> | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_getinfo<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 菜单 详情
           * [required]
           */
          data: MenuInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 菜单 详情
           * [required]
           */
          data: MenuInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_getinfo',
        Config
      >;
      /**
       * ---
       *
       * [GET] 列表
       *
       * **path:** /api/Menu/GetTree
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     id: string
       *     // 菜单标题
       *     title: string | null
       *     // 路由名称
       *     name: string | null
       *     // 父级菜单ID
       *     parentId: string | null
       *     // 排序
       *     order: number
       *     // icon图标
       *     icon: string | null
       *     iconType: 1 | 2
       *     menuType: 1 | 2 | 3 | 4
       *     // 是否隐藏
       *     hideInMenu: boolean
       *     // 跳转路由
       *     redirect: string | null
       *     // 根目录始终显示
       *     alwaysShow: boolean
       *     // 状态
       *     status: boolean
       *     children: Array<MenuTreeDTO> | null
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_gettree<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: MenuTreeDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: MenuTreeDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_gettree',
        Config
      >;
      /**
       * ---
       *
       * [GET] 判断路由是否存在
       *
       * **path:** /api/Menu/IsRouteExist
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   name: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: boolean
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_isrouteexist<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: boolean;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            name: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: boolean;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_isrouteexist',
        Config
      >;
      /**
       * ---
       *
       * [GET] 我的菜单
       *
       * **path:** /api/Menu/MyRoutes
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否删除
       *     isDeleted: boolean
       *     // 菜单名
       *     name: string | null
       *     // 路径
       *     path: string | null
       *     // 重定向
       *     redirect: string | null
       *     // 组件
       *     component: string | null
       *     // 父级
       *     parentId: string | null
       *     type: 1 | 2 | 3 | 4
       *     // 状态
       *     status: boolean
       *     meta: {
       *       // 路由标题(可用来作document.title或者菜单的名称)
       *       title: string | null
       *       // 权限标识
       *       roles: string[] | null
       *       // 缓存页面
       *       keepAlive: boolean
       *       // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *       constant: boolean
       *       // 菜单和面包屑对应的图标
       *       icon: string | null
       *       // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *       localIcon: string | null
       *       // 菜单和面包屑对应的图标的字体大小
       *       iconFontSize: number | null
       *       // 路由顺序，可用于菜单的排序
       *       order: number
       *       // 外链链接
       *       href: string | null
       *       // 是否在菜单中隐藏路线
       *       hideInMenu: boolean
       *       // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *       activeMenu: string | null
       *       // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *       multiTab: boolean
       *       // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *       fixedIndexInTab: number | null
       *       // 跳转参数
       *       query: Array<{
       *         id: string
       *         // 父级Id
       *         parentId: string | null
       *         key: string | null
       *         value: string | null
       *         // 状态
       *         status: boolean
       *       }> | null
       *     }
       *     props: boolean
       *     // 子节点
       *     children: Array<RouteDTO> | null
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_myroutes<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RouteDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RouteDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_myroutes',
        Config
      >;
      /**
       * ---
       *
       * [GET] 菜单下拉
       *
       * **path:** /api/Menu/TreeSelect
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     id: string
       *     // 父级ID
       *     parentId: string | null
       *     // 标题
       *     title: string | null
       *     menuType: 1 | 2 | 3 | 4
       *     children: Array<RouteTreeSelectDTO> | null
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_treeselect<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RouteTreeSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RouteTreeSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_treeselect',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 编辑
       *
       * **path:** /api/Menu/Update
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 创建者名称
       *   createBy: string | null
       *   // 创建时间
       *   createTime: string
       *   // 更新者名称
       *   updateBy: string | null
       *   // 最后更新时间
       *   updateTime: string | null
       *   // 是否已删除
       *   isDeleted: boolean
       *   // 权限标识符
       *   permission: string | null
       *   // 菜单名
       *   name: string | null
       *   // 路径
       *   pathParam: string | null
       *   layout: 1 | 2
       *   // 重定向
       *   redirect: string | null
       *   // 组件
       *   component: string | null
       *   // 父级
       *   parentId: string | null
       *   menuType: 1 | 2 | 3 | 4
       *   iconType: 1 | 2
       *   // 状态
       *   status: boolean
       *   // 路由标题(可用来作document.title或者菜单的名称)
       *   title: string | null
       *   // 缓存页面
       *   keepAlive: boolean
       *   // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *   constant: boolean
       *   // 菜单和面包屑对应的图标
       *   icon: string | null
       *   // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *   localIcon: string | null
       *   // 菜单和面包屑对应的图标的字体大小
       *   iconFontSize: number
       *   // 路由顺序，可用于菜单的排序
       *   order: number
       *   // 外链链接
       *   href: string | null
       *   // 是否在菜单中隐藏路线
       *   hideInMenu: boolean
       *   // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *   activeMenu: string | null
       *   // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *   multiTab: boolean
       *   // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *   fixedIndexInTab: number
       *   props: boolean
       *   // 子菜单集合
       *   children: Array<{
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 权限标识符
       *     permission: string | null
       *     // 菜单名
       *     name: string | null
       *     // 路径
       *     pathParam: string | null
       *     layout: 1 | 2
       *     // 重定向
       *     redirect: string | null
       *     // 组件
       *     component: string | null
       *     // 父级
       *     parentId: string | null
       *     menuType: 1 | 2 | 3 | 4
       *     iconType: 1 | 2
       *     // 状态
       *     status: boolean
       *     // 路由标题(可用来作document.title或者菜单的名称)
       *     title: string | null
       *     // 缓存页面
       *     keepAlive: boolean
       *     // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *     constant: boolean
       *     // 菜单和面包屑对应的图标
       *     icon: string | null
       *     // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *     localIcon: string | null
       *     // 菜单和面包屑对应的图标的字体大小
       *     iconFontSize: number
       *     // 路由顺序，可用于菜单的排序
       *     order: number
       *     // 外链链接
       *     href: string | null
       *     // 是否在菜单中隐藏路线
       *     hideInMenu: boolean
       *     // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *     activeMenu: string | null
       *     // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *     multiTab: boolean
       *     // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *     fixedIndexInTab: number
       *     props: boolean
       *     // 子菜单集合
       *     children: Array<Menu> | null
       *     // 菜单集合
       *     roles: Array<Role> | null
       *   }> | null
       *   // 菜单集合
       *   roles: Array<{
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 角色名称
       *     name: string | null
       *     // 角色等级
       *     level: number
       *     // 描述
       *     description: string | null
       *     dataScopeType: 0 | 1 | 2 | 3 | 4 | 5
       *     // 角色代码
       *     permission: string | null
       *     // 菜单集合
       *     menus: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 权限标识符
       *       permission: string | null
       *       // 菜单名
       *       name: string | null
       *       // 路径
       *       pathParam: string | null
       *       layout: 1 | 2
       *       // 重定向
       *       redirect: string | null
       *       // 组件
       *       component: string | null
       *       // 父级
       *       parentId: string | null
       *       menuType: 1 | 2 | 3 | 4
       *       iconType: 1 | 2
       *       // 状态
       *       status: boolean
       *       // 路由标题(可用来作document.title或者菜单的名称)
       *       title: string | null
       *       // 缓存页面
       *       keepAlive: boolean
       *       // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *       constant: boolean
       *       // 菜单和面包屑对应的图标
       *       icon: string | null
       *       // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *       localIcon: string | null
       *       // 菜单和面包屑对应的图标的字体大小
       *       iconFontSize: number
       *       // 路由顺序，可用于菜单的排序
       *       order: number
       *       // 外链链接
       *       href: string | null
       *       // 是否在菜单中隐藏路线
       *       hideInMenu: boolean
       *       // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *       activeMenu: string | null
       *       // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *       multiTab: boolean
       *       // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *       fixedIndexInTab: number
       *       props: boolean
       *       // 子菜单集合
       *       children: Array<Menu> | null
       *       // 菜单集合
       *       roles: Array<Role> | null
       *     }> | null
       *     // 部门集合
       *     depts: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 部门名称
       *       name: string | null
       *       // 父级部门ID
       *       parentId: string
       *       // 排序
       *       sort: number
       *       // 是否启用
       *       enabled: boolean
       *       // 子节点个数
       *       subCount: number
       *       // 用户列表
       *       users: Array<{
       *         // 主键
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否已删除
       *         isDeleted: boolean
       *         // 用户名
       *         userName: string | null
       *         // 昵称
       *         nickName: string | null
       *         // 邮箱
       *         email: string | null
       *         // 是否内置管理员
       *         isAdmin: boolean
       *         // 是否激活
       *         enabled: boolean
       *         // 密码
       *         password: string | null
       *         // 部门
       *         deptId: string
       *         // 电话
       *         phone: string | null
       *         // 头像路径
       *         avatarPath: string | null
       *         // 最后修改密码时间
       *         passwordReSetTime: string | null
       *         // 性别
       *         gender: string | null
       *         // 租户ID
       *         tenantId: number
       *         // 部门
       *         dept: Dept
       *         // 角色集合
       *         roles: Array<Role> | null
       *         // 岗位集合
       *         jobs: Array<{
       *           // 主键
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否已删除
       *           isDeleted: boolean
       *           // 名称
       *           name: string | null
       *           // 编号
       *           code: string | null
       *           // 排序
       *           sort: number
       *           // 是否激活
       *           enabled: boolean
       *           // 用户列表
       *           users: Array<User> | null
       *         }> | null
       *         // 租户
       *         tenant: {
       *           // 主键
       *           id: string
       *           // 创建者名称
       *           createBy: string | null
       *           // 创建时间
       *           createTime: string
       *           // 更新者名称
       *           updateBy: string | null
       *           // 最后更新时间
       *           updateTime: string | null
       *           // 是否已删除
       *           isDeleted: boolean
       *           // 租户Id
       *           tenantId: number
       *           // 名称
       *           name: string | null
       *           // 描述
       *           description: string | null
       *           // 租户类型
       *           tenantType: 1 | 2
       *           // 库Id
       *           configId: string | null
       *           dbType:
       *             | 0
       *             | 1
       *             | 2
       *             | 3
       *             | 4
       *             | 5
       *             | 6
       *             | 7
       *             | 8
       *             | 9
       *             | 10
       *             | 11
       *             | 12
       *             | 13
       *             | 14
       *             | 15
       *             | 16
       *             | 17
       *             | 18
       *             | 19
       *             | 20
       *             | 21
       *             | 22
       *             | 23
       *             | 24
       *             | 25
       *             | 26
       *             | 27
       *             | 28
       *             | 29
       *             | 30
       *             | 31
       *             | 900
       *           // 数据库连接
       *           connectionString: string | null
       *           // 用户列表
       *           users: Array<User> | null
       *         }
       *       }> | null
       *       // 用户集合
       *       roles: Array<Role> | null
       *     }> | null
       *     // 用户列表
       *     users: Array<User> | null
       *     // 菜单集合
       *     apis: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 组
       *       group: string | null
       *       // 路径
       *       url: string | null
       *       // 版本
       *       version: number
       *       // 描述
       *       description: string | null
       *       // 请求方法
       *       method: string | null
       *       // 角色集合
       *       roles: Array<Role> | null
       *     }> | null
       *   }> | null
       *   buttons: Array<{
       *     id: string
       *     // 按钮编码
       *     code: string | null
       *     // 描述
       *     desc: string | null
       *     // 父级Id
       *     parentId: string | null
       *     // 状态
       *     status: boolean
       *   }> | null
       *   querys: Array<{
       *     id: string
       *     // 父级Id
       *     parentId: string | null
       *     key: string | null
       *     value: string | null
       *     // 状态
       *     status: boolean
       *   }> | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_update<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateMenuParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.put_update',
        Config
      >;
    };
    Role: {
      /**
       * ---
       *
       * [POST] 新增
       *
       * **path:** /api/Role/Add
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 创建者名称
       *   createBy: string | null
       *   // 创建时间
       *   createTime: string
       *   // 更新者名称
       *   updateBy: string | null
       *   // 最后更新时间
       *   updateTime: string | null
       *   // 是否删除
       *   isDeleted: boolean
       *   // 名称
       *   // [required]
       *   name: string
       *   // 等级
       *   level: number
       *   // 描述
       *   description: string | null
       *   dataScopeType: 0 | 1 | 2 | 3 | 4 | 5
       *   // 标识
       *   // [required]
       *   permission: string
       *   // 角色部门
       *   depts: Array<{
       *     // ID
       *     id: string
       *   }> | null
       *   // 角色菜单
       *   menus: Array<{
       *     // ID
       *     id: string
       *   }> | null
       *   // 角色菜单
       *   apis: Array<{
       *     // ID
       *     id: string
       *   }> | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_add<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateRoleParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.post_add',
        Config
      >;
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/Role/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = string[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: string[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.delete_delete',
        Config
      >;
      /**
       * ---
       *
       * [GET] 分页
       *
       * **path:** /api/Role/GetPage
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // 关键字
       *   KeyWord: string
       *   StartIndex: number
       *   PageIndex: number
       *   PageSize: number
       *   Search: Record<string, Record<string, string> | null>
       *   SortList: Record<string, 1 | 2>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     pagerInfo: {
       *       totalRowCount: number
       *       pageSize: number
       *       startIndex: number
       *       pageIndex: number
       *       hasPrev: boolean
       *       hasNext: boolean
       *       isFirst: boolean
       *       isLast: boolean
       *       totalPageCount: number
       *     }
       *     data: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否删除
       *       isDeleted: boolean
       *       // 名称
       *       name: string | null
       *       // 等级
       *       level: number
       *       // 描述
       *       description: string | null
       *       dataScopeType: 0 | 1 | 2 | 3 | 4 | 5
       *       // 权限标识
       *       permission: string | null
       *       // 菜单列表
       *       menuList: Array<{
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否删除
       *         isDeleted: boolean
       *         // 菜单名
       *         name: string | null
       *         // 路径
       *         path: string | null
       *         // 重定向
       *         redirect: string | null
       *         // 组件
       *         component: string | null
       *         // 父级
       *         parentId: string | null
       *         type: 1 | 2 | 3 | 4
       *         // 状态
       *         status: boolean
       *         meta: {
       *           // 路由标题(可用来作document.title或者菜单的名称)
       *           title: string | null
       *           // 权限标识
       *           roles: string[] | null
       *           // 缓存页面
       *           keepAlive: boolean
       *           // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *           constant: boolean
       *           // 菜单和面包屑对应的图标
       *           icon: string | null
       *           // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *           localIcon: string | null
       *           // 菜单和面包屑对应的图标的字体大小
       *           iconFontSize: number | null
       *           // 路由顺序，可用于菜单的排序
       *           order: number
       *           // 外链链接
       *           href: string | null
       *           // 是否在菜单中隐藏路线
       *           hideInMenu: boolean
       *           // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *           activeMenu: string | null
       *           // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *           multiTab: boolean
       *           // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *           fixedIndexInTab: number | null
       *           // 跳转参数
       *           query: Array<{
       *             id: string
       *             // 父级Id
       *             parentId: string | null
       *             key: string | null
       *             value: string | null
       *             // 状态
       *             status: boolean
       *           }> | null
       *         }
       *         props: boolean
       *         // 子节点
       *         children: Array<RouteDTO> | null
       *       }> | null
       *       // 部门列表
       *       deptList: Array<{
       *         // 主键
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否删除
       *         isDeleted: boolean
       *         // 部门名称
       *         name: string | null
       *         // 父级部门ID
       *         parentId: string
       *         // 排序
       *         sort: number
       *         // 是否启用
       *         enabled: boolean
       *         // 子节点个数
       *         subCount: number
       *         // 子节点
       *         children: Array<DeptDTO> | null
       *       }> | null
       *       // 菜单列表
       *       apis: Array<{
       *         // 主键
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否已删除
       *         isDeleted: boolean
       *         // 组
       *         group: string | null
       *         // 路径
       *         url: string | null
       *         // 版本
       *         version: number
       *         // 描述
       *         description: string | null
       *         // 请求方法
       *         method: string | null
       *         // 角色集合
       *         roles: Array<Role> | null
       *       }> | null
       *     }> | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_getpage<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RoleDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            /**
             * 关键字
             */
            KeyWord: string;
            StartIndex: number;
            PageIndex: number;
            PageSize: number;
            Search: Record<string, Record<string, string> | null>;
            SortList: Record<string, OrderTypeEnum>;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RoleDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.get_getpage',
        Config
      >;
      /**
       * ---
       *
       * [GET] 获取权限
       *
       * **path:** /api/Role/GetPermission
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   roleId: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     roleId: string
       *     menuIds: string[] | null
       *     def: string[] | null
       *     pc: string[] | null
       *     app: string[] | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_getpermission<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RolePermissionParam;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            roleId: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RolePermissionParam;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.get_getpermission',
        Config
      >;
      /**
       * ---
       *
       * [POST] 设置权限
       *
       * **path:** /api/Role/SetPermission
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   roleId: string
       *   menuIds: string[] | null
       *   def: string[] | null
       *   pc: string[] | null
       *   app: string[] | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: unknown
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_setpermission<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: RolePermissionParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.post_setpermission',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 编辑
       *
       * **path:** /api/Role/Update
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 创建者名称
       *   createBy: string | null
       *   // 创建时间
       *   createTime: string
       *   // 更新者名称
       *   updateBy: string | null
       *   // 最后更新时间
       *   updateTime: string | null
       *   // 是否删除
       *   isDeleted: boolean
       *   // 名称
       *   // [required]
       *   name: string
       *   // 等级
       *   level: number
       *   // 描述
       *   description: string | null
       *   dataScopeType: 0 | 1 | 2 | 3 | 4 | 5
       *   // 标识
       *   // [required]
       *   permission: string
       *   // 角色部门
       *   depts: Array<{
       *     // ID
       *     id: string
       *   }> | null
       *   // 角色菜单
       *   menus: Array<{
       *     // ID
       *     id: string
       *   }> | null
       *   // 角色菜单
       *   apis: Array<{
       *     // ID
       *     id: string
       *   }> | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_update<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateRoleParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.put_update',
        Config
      >;
    };
    TableDynamic: {
      /**
       * ---
       *
       * [GET] 分页
       *
       * **path:** /api/TableDynamic/{configId}/{tableof}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   configId: string
       *   // [required]
       *   tableof: string
       * }
       * ```
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   StartIndex: number
       *   PageIndex: number
       *   PageSize: number
       *   Search: Record<string, Record<string, string> | null>
       *   SortList: Record<string, 1 | 2>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     pagerInfo: {
       *       totalRowCount: number
       *       pageSize: number
       *       startIndex: number
       *       pageIndex: number
       *       hasPrev: boolean
       *       hasNext: boolean
       *       isFirst: boolean
       *       isLast: boolean
       *       totalPageCount: number
       *     }
       *     data: unknown[] | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_configid_tableof<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: ObjectPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          pathParams: {
            /**
             * [required]
             */
            configId: string;
            /**
             * [required]
             */
            tableof: string;
          };
          params: {
            StartIndex: number;
            PageIndex: number;
            PageSize: number;
            Search: Record<string, Record<string, string> | null>;
            SortList: Record<string, OrderTypeEnum>;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: ObjectPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableDynamic.get_configid_tableof',
        Config
      >;
      /**
       * ---
       *
       * [POST] 添加
       *
       * **path:** /api/TableDynamic/{configId}/{tableof}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   configId: string
       *   // [required]
       *   tableof: string
       * }
       * ```
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = Record<string, unknown>
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_configid_tableof<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          pathParams: {
            /**
             * [required]
             */
            configId: string;
            /**
             * [required]
             */
            tableof: string;
          };
          data: Record<string, unknown>;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableDynamic.post_configid_tableof',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 编辑
       *
       * **path:** /api/TableDynamic/{configId}/{tableof}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   configId: string
       *   // [required]
       *   tableof: string
       * }
       * ```
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = Record<string, unknown>
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_configid_tableof<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          pathParams: {
            /**
             * [required]
             */
            configId: string;
            /**
             * [required]
             */
            tableof: string;
          };
          data: Record<string, unknown>;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableDynamic.put_configid_tableof',
        Config
      >;
      /**
       * ---
       *
       * [DELETE] 删除表头
       *
       * **path:** /api/TableDynamic/{configId}/{tableof}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   configId: string
       *   // [required]
       *   tableof: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_configid_tableof<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          pathParams: {
            /**
             * [required]
             */
            configId: string;
            /**
             * [required]
             */
            tableof: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableDynamic.delete_configid_tableof',
        Config
      >;
    };
    TableForm: {
      /**
       * ---
       *
       * [POST] 新增
       *
       * **path:** /api/TableForm/Add
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 创建者名称
       *   createBy: string | null
       *   // 创建时间
       *   createTime: string
       *   // 更新者名称
       *   updateBy: string | null
       *   // 最后更新时间
       *   updateTime: string | null
       *   // 是否已删除
       *   isDeleted: boolean
       *   // 表名
       *   tableof: string | null
       *   // 路由
       *   router: string | null
       *   // 多余参数
       *   attrs: string | null
       *   // 多余参数
       *   configId: string | null
       *   // 字段
       *   items: Array<{
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 视图Id
       *     formId: string
       *     // 字段名称
       *     label: string | null
       *     // 字段
       *     prop: string | null
       *     // 字段验证
       *     rules: string | null
       *     // 排序
       *     sort: number
       *     componentType: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 50 | 99
       *     // 是否隐藏
       *     isShow: boolean
       *     // 是否自定义
       *     isCustom: boolean
       *     // 多余参数
       *     attrs: string | null
       *     // 表格重写
       *     tableForm: {
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 表名
       *       tableof: string | null
       *       // 路由
       *       router: string | null
       *       // 多余参数
       *       attrs: string | null
       *       // 多余参数
       *       configId: string | null
       *       // 字段
       *       items: Array<TableFormItem> | null
       *     }
       *   }> | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_add<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateTableFormParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableForm.post_add',
        Config
      >;
      /**
       * ---
       *
       * [GET] 表头信息获取
       *
       * **path:** /api/TableForm/GetForm
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   Tableof: string
       *   Router: string
       *   ConfigId: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 表格重写
       *   // [required]
       *   data: {
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 表名
       *     tableof: string | null
       *     // 路由
       *     router: string | null
       *     // 多余参数
       *     attrs: string | null
       *     // 多余参数
       *     configId: string | null
       *     // 字段
       *     items: Array<TableFormItem> | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_getform<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 表格重写
           * [required]
           */
          data: TableForm;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            Tableof: string;
            Router: string;
            ConfigId: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 表格重写
           * [required]
           */
          data: TableForm;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableForm.get_getform',
        Config
      >;
      /**
       * ---
       *
       * [GET] 获取表字段
       *
       * **path:** /api/TableForm/GetTableForm
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   Tableof: string
       *   Router: string
       *   ConfigId: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 表格重写
       *   // [required]
       *   data: {
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 表名
       *     tableof: string | null
       *     // 路由
       *     router: string | null
       *     // 多余参数
       *     attrs: string | null
       *     // 多余参数
       *     configId: string | null
       *     // 字段
       *     items: Array<TableFormItem> | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_gettableform<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 表格重写
           * [required]
           */
          data: TableForm;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            Tableof: string;
            Router: string;
            ConfigId: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 表格重写
           * [required]
           */
          data: TableForm;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableForm.get_gettableform',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 编辑
       *
       * **path:** /api/TableForm/Update
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 创建者名称
       *   createBy: string | null
       *   // 创建时间
       *   createTime: string
       *   // 更新者名称
       *   updateBy: string | null
       *   // 最后更新时间
       *   updateTime: string | null
       *   // 是否已删除
       *   isDeleted: boolean
       *   // 表名
       *   tableof: string | null
       *   // 路由
       *   router: string | null
       *   // 多余参数
       *   attrs: string | null
       *   // 多余参数
       *   configId: string | null
       *   // 字段
       *   items: Array<{
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 视图Id
       *     formId: string
       *     // 字段名称
       *     label: string | null
       *     // 字段
       *     prop: string | null
       *     // 字段验证
       *     rules: string | null
       *     // 排序
       *     sort: number
       *     componentType: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 50 | 99
       *     // 是否隐藏
       *     isShow: boolean
       *     // 是否自定义
       *     isCustom: boolean
       *     // 多余参数
       *     attrs: string | null
       *     // 表格重写
       *     tableForm: {
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 表名
       *       tableof: string | null
       *       // 路由
       *       router: string | null
       *       // 多余参数
       *       attrs: string | null
       *       // 多余参数
       *       configId: string | null
       *       // 字段
       *       items: Array<TableFormItem> | null
       *     }
       *   }> | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_update<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateTableFormParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableForm.put_update',
        Config
      >;
    };
    TableFormItem: {
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/TableFormItem/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = string[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: unknown
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: string[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableFormItem.delete_delete',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 设置高阶字段
       *
       * **path:** /api/TableFormItem/SetAttrs
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 字段Id
       *   id: string
       *   // 字段
       *   attrs: string | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: unknown
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_setattrs<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: SetAttrsFormItemParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableFormItem.put_setattrs',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 设置FormItem
       *
       * **path:** /api/TableFormItem/SetFormItem
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 创建者名称
       *   createBy: string | null
       *   // 创建时间
       *   createTime: string
       *   // 更新者名称
       *   updateBy: string | null
       *   // 最后更新时间
       *   updateTime: string | null
       *   // 是否已删除
       *   isDeleted: boolean
       *   // 视图Id
       *   formId: string
       *   // 字段名称
       *   label: string | null
       *   // 字段
       *   prop: string | null
       *   // 字段验证
       *   rules: string | null
       *   // 排序
       *   sort: number
       *   componentType: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 50 | 99
       *   // 是否隐藏
       *   isShow: boolean
       *   // 是否自定义
       *   isCustom: boolean
       *   // 多余参数
       *   attrs: string | null
       *   // 表格重写
       *   tableForm: {
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 表名
       *     tableof: string | null
       *     // 路由
       *     router: string | null
       *     // 多余参数
       *     attrs: string | null
       *     // 多余参数
       *     configId: string | null
       *     // 字段
       *     items: Array<TableFormItem> | null
       *   }
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 表格重写
       *   // [required]
       *   data: {
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 视图Id
       *     formId: string
       *     // 字段名称
       *     label: string | null
       *     // 字段
       *     prop: string | null
       *     // 字段验证
       *     rules: string | null
       *     // 排序
       *     sort: number
       *     componentType: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 50 | 99
       *     // 是否隐藏
       *     isShow: boolean
       *     // 是否自定义
       *     isCustom: boolean
       *     // 多余参数
       *     attrs: string | null
       *     // 表格重写
       *     tableForm: {
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 表名
       *       tableof: string | null
       *       // 路由
       *       router: string | null
       *       // 多余参数
       *       attrs: string | null
       *       // 多余参数
       *       configId: string | null
       *       // 字段
       *       items: Array<TableFormItem> | null
       *     }
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_setformitem<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 表格重写
           * [required]
           */
          data: TableFormItem;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: TableFormItem;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 表格重写
           * [required]
           */
          data: TableFormItem;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableFormItem.put_setformitem',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 排序
       *
       * **path:** /api/TableFormItem/SetSort
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = Array<{
       *   id: string
       *   sort: number
       * }>
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: unknown
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_setsort<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: SortParam[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableFormItem.put_setsort',
        Config
      >;
    };
    TableView: {
      /**
       * ---
       *
       * [GET] 获取表字段
       *
       * **path:** /api/TableView/GetEdit
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   Tableof: string
       *   Router: string
       *   ConfigId: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     // 主键
       *     id: string
       *     // 配置库
       *     configId: string | null
       *     // 路由
       *     router: string | null
       *     // 表名
       *     // [required]
       *     tableof: string
       *     // 多余参数
       *     attrs: string | null
       *     // 字段
       *     columnsString: string | null
       *     // 默认排序字段
       *     sortString: string | null
       *     // 字段
       *     columns: Array<{
       *       // 字段名称
       *       label: string | null
       *       // 字段
       *       prop: string | null
       *       searchType: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16
       *       columnType: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 50 | 99
       *       // 字段描述
       *       columnTypeDetail: string | null
       *       // 字段验证
       *       columnTypeRules: string | null
       *       // 是否自定义
       *       isCustom: boolean
       *       // 排序
       *       sort: number
       *       // 是否隐藏
       *       isShow: boolean
       *       isEditDel: boolean
       *       // 多余参数
       *       attrs: string | null
       *     }> | null
       *     // 多列排序
       *     sorts: Record<string, 1 | 2> | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_getedit<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: TableViewInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            Tableof: string;
            Router: string;
            ConfigId: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: TableViewInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableView.get_getedit',
        Config
      >;
      /**
       * ---
       *
       * [GET] 表头信息获取
       *
       * **path:** /api/TableView/GetView
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   Tableof: string
       *   Router: string
       *   ConfigId: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 表格重写
       *   // [required]
       *   data: {
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 配置库
       *     configId: string | null
       *     // 路由
       *     router: string | null
       *     // 表名
       *     // [required]
       *     tableof: string
       *     // 多余参数
       *     attrs: string | null
       *     // 字段
       *     columnsString: string | null
       *     // 默认排序字段
       *     sortString: string | null
       *     // 字段
       *     columns: Array<{
       *       // 字段名称
       *       label: string | null
       *       // 字段
       *       prop: string | null
       *       searchType: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16
       *       columnType: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 50 | 99
       *       // 字段描述
       *       columnTypeDetail: string | null
       *       // 字段验证
       *       columnTypeRules: string | null
       *       // 是否自定义
       *       isCustom: boolean
       *       // 排序
       *       sort: number
       *       // 是否隐藏
       *       isShow: boolean
       *       isEditDel: boolean
       *       // 多余参数
       *       attrs: string | null
       *     }> | null
       *     // 多列排序
       *     sorts: Record<string, 1 | 2> | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_getview<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 表格重写
           * [required]
           */
          data: TableView;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            Tableof: string;
            Router: string;
            ConfigId: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 表格重写
           * [required]
           */
          data: TableView;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableView.get_getview',
        Config
      >;
      /**
       * ---
       *
       * [POST] 编辑模型
       *
       * **path:** /api/TableView/SetEdit
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 配置库
       *   configId: string | null
       *   // 路由
       *   router: string | null
       *   // 表名
       *   // [required]
       *   tableof: string
       *   // 多余参数
       *   attrs: string | null
       *   // 字段
       *   columns: Array<{
       *     // 字段名称
       *     label: string | null
       *     // 字段
       *     prop: string | null
       *     searchType: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16
       *     columnType: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 50 | 99
       *     // 字段描述
       *     columnTypeDetail: string | null
       *     // 字段验证
       *     columnTypeRules: string | null
       *     // 是否自定义
       *     isCustom: boolean
       *     // 排序
       *     sort: number
       *     // 是否隐藏
       *     isShow: boolean
       *     isEditDel: boolean
       *     // 多余参数
       *     attrs: string | null
       *   }> | null
       *   // 默认排序字段
       *   // [required]
       *   sorts: Record<string, 1 | 2>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_setedit<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateTableViewParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableView.post_setedit',
        Config
      >;
    };
    Tenant: {
      /**
       * ---
       *
       * [POST] 新增
       *
       * **path:** /api/Tenant/Add
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 创建者名称
       *   createBy: string | null
       *   // 创建时间
       *   createTime: string
       *   // 更新者名称
       *   updateBy: string | null
       *   // 最后更新时间
       *   updateTime: string | null
       *   // 是否已删除
       *   isDeleted: boolean
       *   // 租户Id
       *   tenantId: number
       *   // 名称
       *   name: string | null
       *   // 描述
       *   description: string | null
       *   // 租户类型
       *   tenantType: 1 | 2
       *   // 库Id
       *   configId: string | null
       *   dbType:
       *     | 0
       *     | 1
       *     | 2
       *     | 3
       *     | 4
       *     | 5
       *     | 6
       *     | 7
       *     | 8
       *     | 9
       *     | 10
       *     | 11
       *     | 12
       *     | 13
       *     | 14
       *     | 15
       *     | 16
       *     | 17
       *     | 18
       *     | 19
       *     | 20
       *     | 21
       *     | 22
       *     | 23
       *     | 24
       *     | 25
       *     | 26
       *     | 27
       *     | 28
       *     | 29
       *     | 30
       *     | 31
       *     | 900
       *   // 数据库连接
       *   connectionString: string | null
       *   // 用户列表
       *   users: Array<{
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 用户名
       *     userName: string | null
       *     // 昵称
       *     nickName: string | null
       *     // 邮箱
       *     email: string | null
       *     // 是否内置管理员
       *     isAdmin: boolean
       *     // 是否激活
       *     enabled: boolean
       *     // 密码
       *     password: string | null
       *     // 部门
       *     deptId: string
       *     // 电话
       *     phone: string | null
       *     // 头像路径
       *     avatarPath: string | null
       *     // 最后修改密码时间
       *     passwordReSetTime: string | null
       *     // 性别
       *     gender: string | null
       *     // 租户ID
       *     tenantId: number
       *     // 部门
       *     dept: Dept
       *     // 角色集合
       *     roles: Array<Role> | null
       *     // 岗位集合
       *     jobs: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 名称
       *       name: string | null
       *       // 编号
       *       code: string | null
       *       // 排序
       *       sort: number
       *       // 是否激活
       *       enabled: boolean
       *       // 用户列表
       *       users: Array<User> | null
       *     }> | null
       *     // 租户
       *     tenant: {
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 租户Id
       *       tenantId: number
       *       // 名称
       *       name: string | null
       *       // 描述
       *       description: string | null
       *       // 租户类型
       *       tenantType: 1 | 2
       *       // 库Id
       *       configId: string | null
       *       dbType:
       *         | 0
       *         | 1
       *         | 2
       *         | 3
       *         | 4
       *         | 5
       *         | 6
       *         | 7
       *         | 8
       *         | 9
       *         | 10
       *         | 11
       *         | 12
       *         | 13
       *         | 14
       *         | 15
       *         | 16
       *         | 17
       *         | 18
       *         | 19
       *         | 20
       *         | 21
       *         | 22
       *         | 23
       *         | 24
       *         | 25
       *         | 26
       *         | 27
       *         | 28
       *         | 29
       *         | 30
       *         | 31
       *         | 900
       *       // 数据库连接
       *       connectionString: string | null
       *       // 用户列表
       *       users: Array<User> | null
       *     }
       *   }> | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_add<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateTenantParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Tenant.post_add',
        Config
      >;
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/Tenant/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = string[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: string[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Tenant.delete_delete',
        Config
      >;
      /**
       * ---
       *
       * [GET] 详情
       *
       * **path:** /api/Tenant/GetInfo
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 详情
       *   // [required]
       *   data: {
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 租户Id
       *     tenantId: number
       *     // 名称
       *     name: string | null
       *     // 描述
       *     description: string | null
       *     // 租户类型
       *     tenantType: 1 | 2
       *     // 库Id
       *     configId: string | null
       *     dbType:
       *       | 0
       *       | 1
       *       | 2
       *       | 3
       *       | 4
       *       | 5
       *       | 6
       *       | 7
       *       | 8
       *       | 9
       *       | 10
       *       | 11
       *       | 12
       *       | 13
       *       | 14
       *       | 15
       *       | 16
       *       | 17
       *       | 18
       *       | 19
       *       | 20
       *       | 21
       *       | 22
       *       | 23
       *       | 24
       *       | 25
       *       | 26
       *       | 27
       *       | 28
       *       | 29
       *       | 30
       *       | 31
       *       | 900
       *     // 数据库连接
       *     connectionString: string | null
       *     // 用户列表
       *     users: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 用户名
       *       userName: string | null
       *       // 昵称
       *       nickName: string | null
       *       // 邮箱
       *       email: string | null
       *       // 是否内置管理员
       *       isAdmin: boolean
       *       // 是否激活
       *       enabled: boolean
       *       // 密码
       *       password: string | null
       *       // 部门
       *       deptId: string
       *       // 电话
       *       phone: string | null
       *       // 头像路径
       *       avatarPath: string | null
       *       // 最后修改密码时间
       *       passwordReSetTime: string | null
       *       // 性别
       *       gender: string | null
       *       // 租户ID
       *       tenantId: number
       *       // 部门
       *       dept: Dept
       *       // 角色集合
       *       roles: Array<Role> | null
       *       // 岗位集合
       *       jobs: Array<{
       *         // 主键
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否已删除
       *         isDeleted: boolean
       *         // 名称
       *         name: string | null
       *         // 编号
       *         code: string | null
       *         // 排序
       *         sort: number
       *         // 是否激活
       *         enabled: boolean
       *         // 用户列表
       *         users: Array<User> | null
       *       }> | null
       *       // 租户
       *       tenant: {
       *         // 主键
       *         id: string
       *         // 创建者名称
       *         createBy: string | null
       *         // 创建时间
       *         createTime: string
       *         // 更新者名称
       *         updateBy: string | null
       *         // 最后更新时间
       *         updateTime: string | null
       *         // 是否已删除
       *         isDeleted: boolean
       *         // 租户Id
       *         tenantId: number
       *         // 名称
       *         name: string | null
       *         // 描述
       *         description: string | null
       *         // 租户类型
       *         tenantType: 1 | 2
       *         // 库Id
       *         configId: string | null
       *         dbType:
       *           | 0
       *           | 1
       *           | 2
       *           | 3
       *           | 4
       *           | 5
       *           | 6
       *           | 7
       *           | 8
       *           | 9
       *           | 10
       *           | 11
       *           | 12
       *           | 13
       *           | 14
       *           | 15
       *           | 16
       *           | 17
       *           | 18
       *           | 19
       *           | 20
       *           | 21
       *           | 22
       *           | 23
       *           | 24
       *           | 25
       *           | 26
       *           | 27
       *           | 28
       *           | 29
       *           | 30
       *           | 31
       *           | 900
       *         // 数据库连接
       *         connectionString: string | null
       *         // 用户列表
       *         users: Array<User> | null
       *       }
       *     }> | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_getinfo<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 详情
           * [required]
           */
          data: TenantInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 详情
           * [required]
           */
          data: TenantInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Tenant.get_getinfo',
        Config
      >;
      /**
       * ---
       *
       * [GET] 分页
       *
       * **path:** /api/Tenant/GetPage
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   StartIndex: number
       *   PageIndex: number
       *   PageSize: number
       *   Search: Record<string, Record<string, string> | null>
       *   SortList: Record<string, 1 | 2>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     pagerInfo: {
       *       totalRowCount: number
       *       pageSize: number
       *       startIndex: number
       *       pageIndex: number
       *       hasPrev: boolean
       *       hasNext: boolean
       *       isFirst: boolean
       *       isLast: boolean
       *       totalPageCount: number
       *     }
       *     data: Array<{
       *       // 主键
       *       id: string
       *     }> | null
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_getpage<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: TenantDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            StartIndex: number;
            PageIndex: number;
            PageSize: number;
            Search: Record<string, Record<string, string> | null>;
            SortList: Record<string, OrderTypeEnum>;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: TenantDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Tenant.get_getpage',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 编辑
       *
       * **path:** /api/Tenant/Update
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id: string
       *   // 创建者名称
       *   createBy: string | null
       *   // 创建时间
       *   createTime: string
       *   // 更新者名称
       *   updateBy: string | null
       *   // 最后更新时间
       *   updateTime: string | null
       *   // 是否已删除
       *   isDeleted: boolean
       *   // 租户Id
       *   tenantId: number
       *   // 名称
       *   name: string | null
       *   // 描述
       *   description: string | null
       *   // 租户类型
       *   tenantType: 1 | 2
       *   // 库Id
       *   configId: string | null
       *   dbType:
       *     | 0
       *     | 1
       *     | 2
       *     | 3
       *     | 4
       *     | 5
       *     | 6
       *     | 7
       *     | 8
       *     | 9
       *     | 10
       *     | 11
       *     | 12
       *     | 13
       *     | 14
       *     | 15
       *     | 16
       *     | 17
       *     | 18
       *     | 19
       *     | 20
       *     | 21
       *     | 22
       *     | 23
       *     | 24
       *     | 25
       *     | 26
       *     | 27
       *     | 28
       *     | 29
       *     | 30
       *     | 31
       *     | 900
       *   // 数据库连接
       *   connectionString: string | null
       *   // 用户列表
       *   users: Array<{
       *     // 主键
       *     id: string
       *     // 创建者名称
       *     createBy: string | null
       *     // 创建时间
       *     createTime: string
       *     // 更新者名称
       *     updateBy: string | null
       *     // 最后更新时间
       *     updateTime: string | null
       *     // 是否已删除
       *     isDeleted: boolean
       *     // 用户名
       *     userName: string | null
       *     // 昵称
       *     nickName: string | null
       *     // 邮箱
       *     email: string | null
       *     // 是否内置管理员
       *     isAdmin: boolean
       *     // 是否激活
       *     enabled: boolean
       *     // 密码
       *     password: string | null
       *     // 部门
       *     deptId: string
       *     // 电话
       *     phone: string | null
       *     // 头像路径
       *     avatarPath: string | null
       *     // 最后修改密码时间
       *     passwordReSetTime: string | null
       *     // 性别
       *     gender: string | null
       *     // 租户ID
       *     tenantId: number
       *     // 部门
       *     dept: Dept
       *     // 角色集合
       *     roles: Array<Role> | null
       *     // 岗位集合
       *     jobs: Array<{
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 名称
       *       name: string | null
       *       // 编号
       *       code: string | null
       *       // 排序
       *       sort: number
       *       // 是否激活
       *       enabled: boolean
       *       // 用户列表
       *       users: Array<User> | null
       *     }> | null
       *     // 租户
       *     tenant: {
       *       // 主键
       *       id: string
       *       // 创建者名称
       *       createBy: string | null
       *       // 创建时间
       *       createTime: string
       *       // 更新者名称
       *       updateBy: string | null
       *       // 最后更新时间
       *       updateTime: string | null
       *       // 是否已删除
       *       isDeleted: boolean
       *       // 租户Id
       *       tenantId: number
       *       // 名称
       *       name: string | null
       *       // 描述
       *       description: string | null
       *       // 租户类型
       *       tenantType: 1 | 2
       *       // 库Id
       *       configId: string | null
       *       dbType:
       *         | 0
       *         | 1
       *         | 2
       *         | 3
       *         | 4
       *         | 5
       *         | 6
       *         | 7
       *         | 8
       *         | 9
       *         | 10
       *         | 11
       *         | 12
       *         | 13
       *         | 14
       *         | 15
       *         | 16
       *         | 17
       *         | 18
       *         | 19
       *         | 20
       *         | 21
       *         | 22
       *         | 23
       *         | 24
       *         | 25
       *         | 26
       *         | 27
       *         | 28
       *         | 29
       *         | 30
       *         | 31
       *         | 900
       *       // 数据库连接
       *       connectionString: string | null
       *       // 用户列表
       *       users: Array<User> | null
       *     }
       *   }> | null
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_update<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateTenantParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Tenant.put_update',
        Config
      >;
    };
  }

  var Apis: Apis;
}
